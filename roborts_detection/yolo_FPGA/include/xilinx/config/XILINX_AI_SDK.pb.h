// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xilinx/config/XILINX_AI_SDK.proto

#ifndef PROTOBUF_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto__INCLUDED
#define PROTOBUF_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace xilinx {
namespace config {
class Attribute;
class AttributeDefaultTypeInternal;
extern AttributeDefaultTypeInternal _Attribute_default_instance_;
class AttributeResult;
class AttributeResultDefaultTypeInternal;
extern AttributeResultDefaultTypeInternal _AttributeResult_default_instance_;
class BoundingBox;
class BoundingBoxDefaultTypeInternal;
extern BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;
class ClassificationParam;
class ClassificationParamDefaultTypeInternal;
extern ClassificationParamDefaultTypeInternal _ClassificationParam_default_instance_;
class ClassificationResult;
class ClassificationResultDefaultTypeInternal;
extern ClassificationResultDefaultTypeInternal _ClassificationResult_default_instance_;
class DenseBoxParam;
class DenseBoxParamDefaultTypeInternal;
extern DenseBoxParamDefaultTypeInternal _DenseBoxParam_default_instance_;
class DetectResult;
class DetectResultDefaultTypeInternal;
extern DetectResultDefaultTypeInternal _DetectResult_default_instance_;
class DpuKernel;
class DpuKernelDefaultTypeInternal;
extern DpuKernelDefaultTypeInternal _DpuKernel_default_instance_;
class DpuModel;
class DpuModelDefaultTypeInternal;
extern DpuModelDefaultTypeInternal _DpuModel_default_instance_;
class DpuModelList;
class DpuModelListDefaultTypeInternal;
extern DpuModelListDefaultTypeInternal _DpuModelList_default_instance_;
class DpuModelResult;
class DpuModelResultDefaultTypeInternal;
extern DpuModelResultDefaultTypeInternal _DpuModelResult_default_instance_;
class FaceFixFeature;
class FaceFixFeatureDefaultTypeInternal;
extern FaceFixFeatureDefaultTypeInternal _FaceFixFeature_default_instance_;
class FaceFloatFeature;
class FaceFloatFeatureDefaultTypeInternal;
extern FaceFloatFeatureDefaultTypeInternal _FaceFloatFeature_default_instance_;
class LandmarkResult;
class LandmarkResultDefaultTypeInternal;
extern LandmarkResultDefaultTypeInternal _LandmarkResult_default_instance_;
class MultiTaskParam;
class MultiTaskParamDefaultTypeInternal;
extern MultiTaskParamDefaultTypeInternal _MultiTaskParam_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class PriorBoxParam;
class PriorBoxParamDefaultTypeInternal;
extern PriorBoxParamDefaultTypeInternal _PriorBoxParam_default_instance_;
class RefineDetParam;
class RefineDetParamDefaultTypeInternal;
extern RefineDetParamDefaultTypeInternal _RefineDetParam_default_instance_;
class RefineDetResult;
class RefineDetResultDefaultTypeInternal;
extern RefineDetResultDefaultTypeInternal _RefineDetResult_default_instance_;
class SSDParam;
class SSDParamDefaultTypeInternal;
extern SSDParamDefaultTypeInternal _SSDParam_default_instance_;
class Score;
class ScoreDefaultTypeInternal;
extern ScoreDefaultTypeInternal _Score_default_instance_;
class YoloV3Param;
class YoloV3ParamDefaultTypeInternal;
extern YoloV3ParamDefaultTypeInternal _YoloV3Param_default_instance_;
}  // namespace config
}  // namespace xilinx

namespace xilinx {
namespace config {

namespace protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto

enum DpuModel_ModelType {
  DpuModel_ModelType_UNKNOWN_TYPE = 0,
  DpuModel_ModelType_REFINEDET = 1,
  DpuModel_ModelType_SSD = 2,
  DpuModel_ModelType_YOLOv3 = 3,
  DpuModel_ModelType_CLASSIFICATION = 4,
  DpuModel_ModelType_DENSE_BOX = 5,
  DpuModel_ModelType_MULTI_TASK = 6,
  DpuModel_ModelType_OPENPOSE = 7,
  DpuModel_ModelType_DpuModel_ModelType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DpuModel_ModelType_DpuModel_ModelType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DpuModel_ModelType_IsValid(int value);
const DpuModel_ModelType DpuModel_ModelType_ModelType_MIN = DpuModel_ModelType_UNKNOWN_TYPE;
const DpuModel_ModelType DpuModel_ModelType_ModelType_MAX = DpuModel_ModelType_OPENPOSE;
const int DpuModel_ModelType_ModelType_ARRAYSIZE = DpuModel_ModelType_ModelType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DpuModel_ModelType_descriptor();
inline const ::std::string& DpuModel_ModelType_Name(DpuModel_ModelType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DpuModel_ModelType_descriptor(), value);
}
inline bool DpuModel_ModelType_Parse(
    const ::std::string& name, DpuModel_ModelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DpuModel_ModelType>(
    DpuModel_ModelType_descriptor(), name, value);
}
// ===================================================================

class YoloV3Param : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.YoloV3Param) */ {
 public:
  YoloV3Param();
  virtual ~YoloV3Param();

  YoloV3Param(const YoloV3Param& from);

  inline YoloV3Param& operator=(const YoloV3Param& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  YoloV3Param(YoloV3Param&& from) noexcept
    : YoloV3Param() {
    *this = ::std::move(from);
  }

  inline YoloV3Param& operator=(YoloV3Param&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const YoloV3Param& default_instance();

  static inline const YoloV3Param* internal_default_instance() {
    return reinterpret_cast<const YoloV3Param*>(
               &_YoloV3Param_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(YoloV3Param* other);
  friend void swap(YoloV3Param& a, YoloV3Param& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline YoloV3Param* New() const PROTOBUF_FINAL { return New(NULL); }

  YoloV3Param* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const YoloV3Param& from);
  void MergeFrom(const YoloV3Param& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(YoloV3Param* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float biases = 5;
  int biases_size() const;
  void clear_biases();
  static const int kBiasesFieldNumber = 5;
  float biases(int index) const;
  void set_biases(int index, float value);
  void add_biases(float value);
  const ::google::protobuf::RepeatedField< float >&
      biases() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_biases();

  // int32 num_classes = 1;
  void clear_num_classes();
  static const int kNumClassesFieldNumber = 1;
  ::google::protobuf::int32 num_classes() const;
  void set_num_classes(::google::protobuf::int32 value);

  // int32 anchorCnt = 2;
  void clear_anchorcnt();
  static const int kAnchorCntFieldNumber = 2;
  ::google::protobuf::int32 anchorcnt() const;
  void set_anchorcnt(::google::protobuf::int32 value);

  // float conf_threshold = 3;
  void clear_conf_threshold();
  static const int kConfThresholdFieldNumber = 3;
  float conf_threshold() const;
  void set_conf_threshold(float value);

  // float nms_threshold = 4;
  void clear_nms_threshold();
  static const int kNmsThresholdFieldNumber = 4;
  float nms_threshold() const;
  void set_nms_threshold(float value);

  // bool test_mAP = 6;
  void clear_test_map();
  static const int kTestMAPFieldNumber = 6;
  bool test_map() const;
  void set_test_map(bool value);

  // @@protoc_insertion_point(class_scope:xilinx.config.YoloV3Param)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > biases_;
  mutable int _biases_cached_byte_size_;
  ::google::protobuf::int32 num_classes_;
  ::google::protobuf::int32 anchorcnt_;
  float conf_threshold_;
  float nms_threshold_;
  bool test_map_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PriorBoxParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.PriorBoxParam) */ {
 public:
  PriorBoxParam();
  virtual ~PriorBoxParam();

  PriorBoxParam(const PriorBoxParam& from);

  inline PriorBoxParam& operator=(const PriorBoxParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PriorBoxParam(PriorBoxParam&& from) noexcept
    : PriorBoxParam() {
    *this = ::std::move(from);
  }

  inline PriorBoxParam& operator=(PriorBoxParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PriorBoxParam& default_instance();

  static inline const PriorBoxParam* internal_default_instance() {
    return reinterpret_cast<const PriorBoxParam*>(
               &_PriorBoxParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PriorBoxParam* other);
  friend void swap(PriorBoxParam& a, PriorBoxParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PriorBoxParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PriorBoxParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PriorBoxParam& from);
  void MergeFrom(const PriorBoxParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PriorBoxParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float variances = 4;
  int variances_size() const;
  void clear_variances();
  static const int kVariancesFieldNumber = 4;
  float variances(int index) const;
  void set_variances(int index, float value);
  void add_variances(float value);
  const ::google::protobuf::RepeatedField< float >&
      variances() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_variances();

  // repeated float min_sizes = 5;
  int min_sizes_size() const;
  void clear_min_sizes();
  static const int kMinSizesFieldNumber = 5;
  float min_sizes(int index) const;
  void set_min_sizes(int index, float value);
  void add_min_sizes(float value);
  const ::google::protobuf::RepeatedField< float >&
      min_sizes() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_min_sizes();

  // repeated float max_sizes = 6;
  int max_sizes_size() const;
  void clear_max_sizes();
  static const int kMaxSizesFieldNumber = 6;
  float max_sizes(int index) const;
  void set_max_sizes(int index, float value);
  void add_max_sizes(float value);
  const ::google::protobuf::RepeatedField< float >&
      max_sizes() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_max_sizes();

  // repeated float aspect_ratios = 7;
  int aspect_ratios_size() const;
  void clear_aspect_ratios();
  static const int kAspectRatiosFieldNumber = 7;
  float aspect_ratios(int index) const;
  void set_aspect_ratios(int index, float value);
  void add_aspect_ratios(float value);
  const ::google::protobuf::RepeatedField< float >&
      aspect_ratios() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_aspect_ratios();

  // int32 layer_width = 1;
  void clear_layer_width();
  static const int kLayerWidthFieldNumber = 1;
  ::google::protobuf::int32 layer_width() const;
  void set_layer_width(::google::protobuf::int32 value);

  // int32 layer_height = 2;
  void clear_layer_height();
  static const int kLayerHeightFieldNumber = 2;
  ::google::protobuf::int32 layer_height() const;
  void set_layer_height(::google::protobuf::int32 value);

  // float offset = 8;
  void clear_offset();
  static const int kOffsetFieldNumber = 8;
  float offset() const;
  void set_offset(float value);

  // float step_width = 9;
  void clear_step_width();
  static const int kStepWidthFieldNumber = 9;
  float step_width() const;
  void set_step_width(float value);

  // float step_height = 10;
  void clear_step_height();
  static const int kStepHeightFieldNumber = 10;
  float step_height() const;
  void set_step_height(float value);

  // bool flip = 11;
  void clear_flip();
  static const int kFlipFieldNumber = 11;
  bool flip() const;
  void set_flip(bool value);

  // bool clip = 12;
  void clear_clip();
  static const int kClipFieldNumber = 12;
  bool clip() const;
  void set_clip(bool value);

  // @@protoc_insertion_point(class_scope:xilinx.config.PriorBoxParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > variances_;
  mutable int _variances_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > min_sizes_;
  mutable int _min_sizes_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > max_sizes_;
  mutable int _max_sizes_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > aspect_ratios_;
  mutable int _aspect_ratios_cached_byte_size_;
  ::google::protobuf::int32 layer_width_;
  ::google::protobuf::int32 layer_height_;
  float offset_;
  float step_width_;
  float step_height_;
  bool flip_;
  bool clip_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SSDParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.SSDParam) */ {
 public:
  SSDParam();
  virtual ~SSDParam();

  SSDParam(const SSDParam& from);

  inline SSDParam& operator=(const SSDParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SSDParam(SSDParam&& from) noexcept
    : SSDParam() {
    *this = ::std::move(from);
  }

  inline SSDParam& operator=(SSDParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SSDParam& default_instance();

  static inline const SSDParam* internal_default_instance() {
    return reinterpret_cast<const SSDParam*>(
               &_SSDParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SSDParam* other);
  friend void swap(SSDParam& a, SSDParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SSDParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SSDParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SSDParam& from);
  void MergeFrom(const SSDParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SSDParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.PriorBoxParam prior_box_param = 1;
  int prior_box_param_size() const;
  void clear_prior_box_param();
  static const int kPriorBoxParamFieldNumber = 1;
  const ::xilinx::config::PriorBoxParam& prior_box_param(int index) const;
  ::xilinx::config::PriorBoxParam* mutable_prior_box_param(int index);
  ::xilinx::config::PriorBoxParam* add_prior_box_param();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >*
      mutable_prior_box_param();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >&
      prior_box_param() const;

  // repeated float conf_threshold = 4;
  int conf_threshold_size() const;
  void clear_conf_threshold();
  static const int kConfThresholdFieldNumber = 4;
  float conf_threshold(int index) const;
  void set_conf_threshold(int index, float value);
  void add_conf_threshold(float value);
  const ::google::protobuf::RepeatedField< float >&
      conf_threshold() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_conf_threshold();

  // int32 num_classes = 2;
  void clear_num_classes();
  static const int kNumClassesFieldNumber = 2;
  ::google::protobuf::int32 num_classes() const;
  void set_num_classes(::google::protobuf::int32 value);

  // float nms_threshold = 3;
  void clear_nms_threshold();
  static const int kNmsThresholdFieldNumber = 3;
  float nms_threshold() const;
  void set_nms_threshold(float value);

  // int32 keep_top_k = 5;
  void clear_keep_top_k();
  static const int kKeepTopKFieldNumber = 5;
  ::google::protobuf::int32 keep_top_k() const;
  void set_keep_top_k(::google::protobuf::int32 value);

  // int32 top_k = 6;
  void clear_top_k();
  static const int kTopKFieldNumber = 6;
  ::google::protobuf::int32 top_k() const;
  void set_top_k(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xilinx.config.SSDParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam > prior_box_param_;
  ::google::protobuf::RepeatedField< float > conf_threshold_;
  mutable int _conf_threshold_cached_byte_size_;
  ::google::protobuf::int32 num_classes_;
  float nms_threshold_;
  ::google::protobuf::int32 keep_top_k_;
  ::google::protobuf::int32 top_k_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefineDetParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.RefineDetParam) */ {
 public:
  RefineDetParam();
  virtual ~RefineDetParam();

  RefineDetParam(const RefineDetParam& from);

  inline RefineDetParam& operator=(const RefineDetParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefineDetParam(RefineDetParam&& from) noexcept
    : RefineDetParam() {
    *this = ::std::move(from);
  }

  inline RefineDetParam& operator=(RefineDetParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefineDetParam& default_instance();

  static inline const RefineDetParam* internal_default_instance() {
    return reinterpret_cast<const RefineDetParam*>(
               &_RefineDetParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RefineDetParam* other);
  friend void swap(RefineDetParam& a, RefineDetParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefineDetParam* New() const PROTOBUF_FINAL { return New(NULL); }

  RefineDetParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefineDetParam& from);
  void MergeFrom(const RefineDetParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefineDetParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.PriorBoxParam prior_box_param = 1;
  int prior_box_param_size() const;
  void clear_prior_box_param();
  static const int kPriorBoxParamFieldNumber = 1;
  const ::xilinx::config::PriorBoxParam& prior_box_param(int index) const;
  ::xilinx::config::PriorBoxParam* mutable_prior_box_param(int index);
  ::xilinx::config::PriorBoxParam* add_prior_box_param();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >*
      mutable_prior_box_param();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >&
      prior_box_param() const;

  // repeated float conf_threshold = 4;
  int conf_threshold_size() const;
  void clear_conf_threshold();
  static const int kConfThresholdFieldNumber = 4;
  float conf_threshold(int index) const;
  void set_conf_threshold(int index, float value);
  void add_conf_threshold(float value);
  const ::google::protobuf::RepeatedField< float >&
      conf_threshold() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_conf_threshold();

  // int32 num_classes = 2;
  void clear_num_classes();
  static const int kNumClassesFieldNumber = 2;
  ::google::protobuf::int32 num_classes() const;
  void set_num_classes(::google::protobuf::int32 value);

  // float nms_threshold = 3;
  void clear_nms_threshold();
  static const int kNmsThresholdFieldNumber = 3;
  float nms_threshold() const;
  void set_nms_threshold(float value);

  // int32 keep_top_k = 5;
  void clear_keep_top_k();
  static const int kKeepTopKFieldNumber = 5;
  ::google::protobuf::int32 keep_top_k() const;
  void set_keep_top_k(::google::protobuf::int32 value);

  // int32 top_k = 6;
  void clear_top_k();
  static const int kTopKFieldNumber = 6;
  ::google::protobuf::int32 top_k() const;
  void set_top_k(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xilinx.config.RefineDetParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam > prior_box_param_;
  ::google::protobuf::RepeatedField< float > conf_threshold_;
  mutable int _conf_threshold_cached_byte_size_;
  ::google::protobuf::int32 num_classes_;
  float nms_threshold_;
  ::google::protobuf::int32 keep_top_k_;
  ::google::protobuf::int32 top_k_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClassificationParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.ClassificationParam) */ {
 public:
  ClassificationParam();
  virtual ~ClassificationParam();

  ClassificationParam(const ClassificationParam& from);

  inline ClassificationParam& operator=(const ClassificationParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassificationParam(ClassificationParam&& from) noexcept
    : ClassificationParam() {
    *this = ::std::move(from);
  }

  inline ClassificationParam& operator=(ClassificationParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassificationParam& default_instance();

  static inline const ClassificationParam* internal_default_instance() {
    return reinterpret_cast<const ClassificationParam*>(
               &_ClassificationParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ClassificationParam* other);
  friend void swap(ClassificationParam& a, ClassificationParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassificationParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ClassificationParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClassificationParam& from);
  void MergeFrom(const ClassificationParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClassificationParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 top_k = 1;
  void clear_top_k();
  static const int kTopKFieldNumber = 1;
  ::google::protobuf::int32 top_k() const;
  void set_top_k(::google::protobuf::int32 value);

  // bool test_accuracy = 2;
  void clear_test_accuracy();
  static const int kTestAccuracyFieldNumber = 2;
  bool test_accuracy() const;
  void set_test_accuracy(bool value);

  // @@protoc_insertion_point(class_scope:xilinx.config.ClassificationParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 top_k_;
  bool test_accuracy_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DenseBoxParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.DenseBoxParam) */ {
 public:
  DenseBoxParam();
  virtual ~DenseBoxParam();

  DenseBoxParam(const DenseBoxParam& from);

  inline DenseBoxParam& operator=(const DenseBoxParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DenseBoxParam(DenseBoxParam&& from) noexcept
    : DenseBoxParam() {
    *this = ::std::move(from);
  }

  inline DenseBoxParam& operator=(DenseBoxParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DenseBoxParam& default_instance();

  static inline const DenseBoxParam* internal_default_instance() {
    return reinterpret_cast<const DenseBoxParam*>(
               &_DenseBoxParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DenseBoxParam* other);
  friend void swap(DenseBoxParam& a, DenseBoxParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DenseBoxParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DenseBoxParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DenseBoxParam& from);
  void MergeFrom(const DenseBoxParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DenseBoxParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 num_of_classes = 1;
  void clear_num_of_classes();
  static const int kNumOfClassesFieldNumber = 1;
  ::google::protobuf::int32 num_of_classes() const;
  void set_num_of_classes(::google::protobuf::int32 value);

  // float nms_threshold = 2;
  void clear_nms_threshold();
  static const int kNmsThresholdFieldNumber = 2;
  float nms_threshold() const;
  void set_nms_threshold(float value);

  // float det_threshold = 3;
  void clear_det_threshold();
  static const int kDetThresholdFieldNumber = 3;
  float det_threshold() const;
  void set_det_threshold(float value);

  // @@protoc_insertion_point(class_scope:xilinx.config.DenseBoxParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 num_of_classes_;
  float nms_threshold_;
  float det_threshold_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultiTaskParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.MultiTaskParam) */ {
 public:
  MultiTaskParam();
  virtual ~MultiTaskParam();

  MultiTaskParam(const MultiTaskParam& from);

  inline MultiTaskParam& operator=(const MultiTaskParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultiTaskParam(MultiTaskParam&& from) noexcept
    : MultiTaskParam() {
    *this = ::std::move(from);
  }

  inline MultiTaskParam& operator=(MultiTaskParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiTaskParam& default_instance();

  static inline const MultiTaskParam* internal_default_instance() {
    return reinterpret_cast<const MultiTaskParam*>(
               &_MultiTaskParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MultiTaskParam* other);
  friend void swap(MultiTaskParam& a, MultiTaskParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultiTaskParam* New() const PROTOBUF_FINAL { return New(NULL); }

  MultiTaskParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultiTaskParam& from);
  void MergeFrom(const MultiTaskParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultiTaskParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float th_conf = 1;
  int th_conf_size() const;
  void clear_th_conf();
  static const int kThConfFieldNumber = 1;
  float th_conf(int index) const;
  void set_th_conf(int index, float value);
  void add_th_conf(float value);
  const ::google::protobuf::RepeatedField< float >&
      th_conf() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_th_conf();

  // repeated .xilinx.config.PriorBoxParam prior_box_param = 7;
  int prior_box_param_size() const;
  void clear_prior_box_param();
  static const int kPriorBoxParamFieldNumber = 7;
  const ::xilinx::config::PriorBoxParam& prior_box_param(int index) const;
  ::xilinx::config::PriorBoxParam* mutable_prior_box_param(int index);
  ::xilinx::config::PriorBoxParam* add_prior_box_param();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >*
      mutable_prior_box_param();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >&
      prior_box_param() const;

  // int32 num_of_detection_classes = 2;
  void clear_num_of_detection_classes();
  static const int kNumOfDetectionClassesFieldNumber = 2;
  ::google::protobuf::int32 num_of_detection_classes() const;
  void set_num_of_detection_classes(::google::protobuf::int32 value);

  // int32 num_of_segmentation_classes = 3;
  void clear_num_of_segmentation_classes();
  static const int kNumOfSegmentationClassesFieldNumber = 3;
  ::google::protobuf::int32 num_of_segmentation_classes() const;
  void set_num_of_segmentation_classes(::google::protobuf::int32 value);

  // int32 keep_top_k = 4;
  void clear_keep_top_k();
  static const int kKeepTopKFieldNumber = 4;
  ::google::protobuf::int32 keep_top_k() const;
  void set_keep_top_k(::google::protobuf::int32 value);

  // int32 top_k = 5;
  void clear_top_k();
  static const int kTopKFieldNumber = 5;
  ::google::protobuf::int32 top_k() const;
  void set_top_k(::google::protobuf::int32 value);

  // float nms_threshold = 6;
  void clear_nms_threshold();
  static const int kNmsThresholdFieldNumber = 6;
  float nms_threshold() const;
  void set_nms_threshold(float value);

  // @@protoc_insertion_point(class_scope:xilinx.config.MultiTaskParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > th_conf_;
  mutable int _th_conf_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam > prior_box_param_;
  ::google::protobuf::int32 num_of_detection_classes_;
  ::google::protobuf::int32 num_of_segmentation_classes_;
  ::google::protobuf::int32 keep_top_k_;
  ::google::protobuf::int32 top_k_;
  float nms_threshold_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DpuKernel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.DpuKernel) */ {
 public:
  DpuKernel();
  virtual ~DpuKernel();

  DpuKernel(const DpuKernel& from);

  inline DpuKernel& operator=(const DpuKernel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DpuKernel(DpuKernel&& from) noexcept
    : DpuKernel() {
    *this = ::std::move(from);
  }

  inline DpuKernel& operator=(DpuKernel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DpuKernel& default_instance();

  static inline const DpuKernel* internal_default_instance() {
    return reinterpret_cast<const DpuKernel*>(
               &_DpuKernel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DpuKernel* other);
  friend void swap(DpuKernel& a, DpuKernel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DpuKernel* New() const PROTOBUF_FINAL { return New(NULL); }

  DpuKernel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DpuKernel& from);
  void MergeFrom(const DpuKernel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DpuKernel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string input = 2;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 2;
  const ::std::string& input(int index) const;
  ::std::string* mutable_input(int index);
  void set_input(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_input(int index, ::std::string&& value);
  #endif
  void set_input(int index, const char* value);
  void set_input(int index, const char* value, size_t size);
  ::std::string* add_input();
  void add_input(const ::std::string& value);
  #if LANG_CXX11
  void add_input(::std::string&& value);
  #endif
  void add_input(const char* value);
  void add_input(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& input() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_input();

  // repeated string output = 3;
  int output_size() const;
  void clear_output();
  static const int kOutputFieldNumber = 3;
  const ::std::string& output(int index) const;
  ::std::string* mutable_output(int index);
  void set_output(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_output(int index, ::std::string&& value);
  #endif
  void set_output(int index, const char* value);
  void set_output(int index, const char* value, size_t size);
  ::std::string* add_output();
  void add_output(const ::std::string& value);
  #if LANG_CXX11
  void add_output(::std::string&& value);
  #endif
  void add_output(const char* value);
  void add_output(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& output() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_output();

  // repeated float mean = 4;
  int mean_size() const;
  void clear_mean();
  static const int kMeanFieldNumber = 4;
  float mean(int index) const;
  void set_mean(int index, float value);
  void add_mean(float value);
  const ::google::protobuf::RepeatedField< float >&
      mean() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_mean();

  // repeated float scale = 5;
  int scale_size() const;
  void clear_scale();
  static const int kScaleFieldNumber = 5;
  float scale(int index) const;
  void set_scale(int index, float value);
  void add_scale(float value);
  const ::google::protobuf::RepeatedField< float >&
      scale() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_scale();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:xilinx.config.DpuKernel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> input_;
  ::google::protobuf::RepeatedPtrField< ::std::string> output_;
  ::google::protobuf::RepeatedField< float > mean_;
  mutable int _mean_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > scale_;
  mutable int _scale_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DpuModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.DpuModel) */ {
 public:
  DpuModel();
  virtual ~DpuModel();

  DpuModel(const DpuModel& from);

  inline DpuModel& operator=(const DpuModel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DpuModel(DpuModel&& from) noexcept
    : DpuModel() {
    *this = ::std::move(from);
  }

  inline DpuModel& operator=(DpuModel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DpuModel& default_instance();

  static inline const DpuModel* internal_default_instance() {
    return reinterpret_cast<const DpuModel*>(
               &_DpuModel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(DpuModel* other);
  friend void swap(DpuModel& a, DpuModel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DpuModel* New() const PROTOBUF_FINAL { return New(NULL); }

  DpuModel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DpuModel& from);
  void MergeFrom(const DpuModel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DpuModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DpuModel_ModelType ModelType;
  static const ModelType UNKNOWN_TYPE =
    DpuModel_ModelType_UNKNOWN_TYPE;
  static const ModelType REFINEDET =
    DpuModel_ModelType_REFINEDET;
  static const ModelType SSD =
    DpuModel_ModelType_SSD;
  static const ModelType YOLOv3 =
    DpuModel_ModelType_YOLOv3;
  static const ModelType CLASSIFICATION =
    DpuModel_ModelType_CLASSIFICATION;
  static const ModelType DENSE_BOX =
    DpuModel_ModelType_DENSE_BOX;
  static const ModelType MULTI_TASK =
    DpuModel_ModelType_MULTI_TASK;
  static const ModelType OPENPOSE =
    DpuModel_ModelType_OPENPOSE;
  static inline bool ModelType_IsValid(int value) {
    return DpuModel_ModelType_IsValid(value);
  }
  static const ModelType ModelType_MIN =
    DpuModel_ModelType_ModelType_MIN;
  static const ModelType ModelType_MAX =
    DpuModel_ModelType_ModelType_MAX;
  static const int ModelType_ARRAYSIZE =
    DpuModel_ModelType_ModelType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ModelType_descriptor() {
    return DpuModel_ModelType_descriptor();
  }
  static inline const ::std::string& ModelType_Name(ModelType value) {
    return DpuModel_ModelType_Name(value);
  }
  static inline bool ModelType_Parse(const ::std::string& name,
      ModelType* value) {
    return DpuModel_ModelType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.DpuKernel kernel = 2;
  int kernel_size() const;
  void clear_kernel();
  static const int kKernelFieldNumber = 2;
  const ::xilinx::config::DpuKernel& kernel(int index) const;
  ::xilinx::config::DpuKernel* mutable_kernel(int index);
  ::xilinx::config::DpuKernel* add_kernel();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuKernel >*
      mutable_kernel();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuKernel >&
      kernel() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .xilinx.config.RefineDetParam refine_det_param = 4;
  bool has_refine_det_param() const;
  void clear_refine_det_param();
  static const int kRefineDetParamFieldNumber = 4;
  const ::xilinx::config::RefineDetParam& refine_det_param() const;
  ::xilinx::config::RefineDetParam* mutable_refine_det_param();
  ::xilinx::config::RefineDetParam* release_refine_det_param();
  void set_allocated_refine_det_param(::xilinx::config::RefineDetParam* refine_det_param);

  // .xilinx.config.YoloV3Param yolo_v3_param = 5;
  bool has_yolo_v3_param() const;
  void clear_yolo_v3_param();
  static const int kYoloV3ParamFieldNumber = 5;
  const ::xilinx::config::YoloV3Param& yolo_v3_param() const;
  ::xilinx::config::YoloV3Param* mutable_yolo_v3_param();
  ::xilinx::config::YoloV3Param* release_yolo_v3_param();
  void set_allocated_yolo_v3_param(::xilinx::config::YoloV3Param* yolo_v3_param);

  // .xilinx.config.SSDParam ssd_param = 6;
  bool has_ssd_param() const;
  void clear_ssd_param();
  static const int kSsdParamFieldNumber = 6;
  const ::xilinx::config::SSDParam& ssd_param() const;
  ::xilinx::config::SSDParam* mutable_ssd_param();
  ::xilinx::config::SSDParam* release_ssd_param();
  void set_allocated_ssd_param(::xilinx::config::SSDParam* ssd_param);

  // .xilinx.config.ClassificationParam classification_param = 7;
  bool has_classification_param() const;
  void clear_classification_param();
  static const int kClassificationParamFieldNumber = 7;
  const ::xilinx::config::ClassificationParam& classification_param() const;
  ::xilinx::config::ClassificationParam* mutable_classification_param();
  ::xilinx::config::ClassificationParam* release_classification_param();
  void set_allocated_classification_param(::xilinx::config::ClassificationParam* classification_param);

  // .xilinx.config.DenseBoxParam dense_box_param = 8;
  bool has_dense_box_param() const;
  void clear_dense_box_param();
  static const int kDenseBoxParamFieldNumber = 8;
  const ::xilinx::config::DenseBoxParam& dense_box_param() const;
  ::xilinx::config::DenseBoxParam* mutable_dense_box_param();
  ::xilinx::config::DenseBoxParam* release_dense_box_param();
  void set_allocated_dense_box_param(::xilinx::config::DenseBoxParam* dense_box_param);

  // .xilinx.config.MultiTaskParam multi_task_param = 9;
  bool has_multi_task_param() const;
  void clear_multi_task_param();
  static const int kMultiTaskParamFieldNumber = 9;
  const ::xilinx::config::MultiTaskParam& multi_task_param() const;
  ::xilinx::config::MultiTaskParam* mutable_multi_task_param();
  ::xilinx::config::MultiTaskParam* release_multi_task_param();
  void set_allocated_multi_task_param(::xilinx::config::MultiTaskParam* multi_task_param);

  // .xilinx.config.DpuModel.ModelType model_type = 3;
  void clear_model_type();
  static const int kModelTypeFieldNumber = 3;
  ::xilinx::config::DpuModel_ModelType model_type() const;
  void set_model_type(::xilinx::config::DpuModel_ModelType value);

  // @@protoc_insertion_point(class_scope:xilinx.config.DpuModel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuKernel > kernel_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::xilinx::config::RefineDetParam* refine_det_param_;
  ::xilinx::config::YoloV3Param* yolo_v3_param_;
  ::xilinx::config::SSDParam* ssd_param_;
  ::xilinx::config::ClassificationParam* classification_param_;
  ::xilinx::config::DenseBoxParam* dense_box_param_;
  ::xilinx::config::MultiTaskParam* multi_task_param_;
  int model_type_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DpuModelList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.DpuModelList) */ {
 public:
  DpuModelList();
  virtual ~DpuModelList();

  DpuModelList(const DpuModelList& from);

  inline DpuModelList& operator=(const DpuModelList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DpuModelList(DpuModelList&& from) noexcept
    : DpuModelList() {
    *this = ::std::move(from);
  }

  inline DpuModelList& operator=(DpuModelList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DpuModelList& default_instance();

  static inline const DpuModelList* internal_default_instance() {
    return reinterpret_cast<const DpuModelList*>(
               &_DpuModelList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(DpuModelList* other);
  friend void swap(DpuModelList& a, DpuModelList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DpuModelList* New() const PROTOBUF_FINAL { return New(NULL); }

  DpuModelList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DpuModelList& from);
  void MergeFrom(const DpuModelList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DpuModelList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.DpuModel model = 1;
  int model_size() const;
  void clear_model();
  static const int kModelFieldNumber = 1;
  const ::xilinx::config::DpuModel& model(int index) const;
  ::xilinx::config::DpuModel* mutable_model(int index);
  ::xilinx::config::DpuModel* add_model();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuModel >*
      mutable_model();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuModel >&
      model() const;

  // @@protoc_insertion_point(class_scope:xilinx.config.DpuModelList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuModel > model_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FaceFixFeature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.FaceFixFeature) */ {
 public:
  FaceFixFeature();
  virtual ~FaceFixFeature();

  FaceFixFeature(const FaceFixFeature& from);

  inline FaceFixFeature& operator=(const FaceFixFeature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceFixFeature(FaceFixFeature&& from) noexcept
    : FaceFixFeature() {
    *this = ::std::move(from);
  }

  inline FaceFixFeature& operator=(FaceFixFeature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceFixFeature& default_instance();

  static inline const FaceFixFeature* internal_default_instance() {
    return reinterpret_cast<const FaceFixFeature*>(
               &_FaceFixFeature_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(FaceFixFeature* other);
  friend void swap(FaceFixFeature& a, FaceFixFeature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceFixFeature* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceFixFeature* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceFixFeature& from);
  void MergeFrom(const FaceFixFeature& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceFixFeature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 feature = 1;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 1;
  ::google::protobuf::int32 feature(int index) const;
  void set_feature(int index, ::google::protobuf::int32 value);
  void add_feature(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      feature() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_feature();

  // @@protoc_insertion_point(class_scope:xilinx.config.FaceFixFeature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > feature_;
  mutable int _feature_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FaceFloatFeature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.FaceFloatFeature) */ {
 public:
  FaceFloatFeature();
  virtual ~FaceFloatFeature();

  FaceFloatFeature(const FaceFloatFeature& from);

  inline FaceFloatFeature& operator=(const FaceFloatFeature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaceFloatFeature(FaceFloatFeature&& from) noexcept
    : FaceFloatFeature() {
    *this = ::std::move(from);
  }

  inline FaceFloatFeature& operator=(FaceFloatFeature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceFloatFeature& default_instance();

  static inline const FaceFloatFeature* internal_default_instance() {
    return reinterpret_cast<const FaceFloatFeature*>(
               &_FaceFloatFeature_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(FaceFloatFeature* other);
  friend void swap(FaceFloatFeature& a, FaceFloatFeature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaceFloatFeature* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceFloatFeature* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceFloatFeature& from);
  void MergeFrom(const FaceFloatFeature& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceFloatFeature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float feature = 1;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 1;
  float feature(int index) const;
  void set_feature(int index, float value);
  void add_feature(float value);
  const ::google::protobuf::RepeatedField< float >&
      feature() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_feature();

  // @@protoc_insertion_point(class_scope:xilinx.config.FaceFloatFeature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > feature_;
  mutable int _feature_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Attribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.Attribute) */ {
 public:
  Attribute();
  virtual ~Attribute();

  Attribute(const Attribute& from);

  inline Attribute& operator=(const Attribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Attribute(Attribute&& from) noexcept
    : Attribute() {
    *this = ::std::move(from);
  }

  inline Attribute& operator=(Attribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Attribute& default_instance();

  static inline const Attribute* internal_default_instance() {
    return reinterpret_cast<const Attribute*>(
               &_Attribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Attribute* other);
  friend void swap(Attribute& a, Attribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Attribute* New() const PROTOBUF_FINAL { return New(NULL); }

  Attribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Attribute& from);
  void MergeFrom(const Attribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Attribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // uint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // float score = 3;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:xilinx.config.Attribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::uint32 value_;
  float score_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const PROTOBUF_FINAL { return New(NULL); }

  Point* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:xilinx.config.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BoundingBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.BoundingBox) */ {
 public:
  BoundingBox();
  virtual ~BoundingBox();

  BoundingBox(const BoundingBox& from);

  inline BoundingBox& operator=(const BoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoundingBox(BoundingBox&& from) noexcept
    : BoundingBox() {
    *this = ::std::move(from);
  }

  inline BoundingBox& operator=(BoundingBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoundingBox& default_instance();

  static inline const BoundingBox* internal_default_instance() {
    return reinterpret_cast<const BoundingBox*>(
               &_BoundingBox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(BoundingBox* other);
  friend void swap(BoundingBox& a, BoundingBox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoundingBox* New() const PROTOBUF_FINAL { return New(NULL); }

  BoundingBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BoundingBox& from);
  void MergeFrom(const BoundingBox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BoundingBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  ::google::protobuf::uint32 label() const;
  void set_label(::google::protobuf::uint32 value);

  // float score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  float score() const;
  void set_score(float value);

  // float x = 3;
  void clear_x();
  static const int kXFieldNumber = 3;
  float x() const;
  void set_x(float value);

  // float y = 4;
  void clear_y();
  static const int kYFieldNumber = 4;
  float y() const;
  void set_y(float value);

  // float width = 5;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  float width() const;
  void set_width(float value);

  // float height = 6;
  void clear_height();
  static const int kHeightFieldNumber = 6;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:xilinx.config.BoundingBox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 label_;
  float score_;
  float x_;
  float y_;
  float width_;
  float height_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AttributeResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.AttributeResult) */ {
 public:
  AttributeResult();
  virtual ~AttributeResult();

  AttributeResult(const AttributeResult& from);

  inline AttributeResult& operator=(const AttributeResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttributeResult(AttributeResult&& from) noexcept
    : AttributeResult() {
    *this = ::std::move(from);
  }

  inline AttributeResult& operator=(AttributeResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeResult& default_instance();

  static inline const AttributeResult* internal_default_instance() {
    return reinterpret_cast<const AttributeResult*>(
               &_AttributeResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(AttributeResult* other);
  friend void swap(AttributeResult& a, AttributeResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttributeResult* New() const PROTOBUF_FINAL { return New(NULL); }

  AttributeResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AttributeResult& from);
  void MergeFrom(const AttributeResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AttributeResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.Attribute attribute = 1;
  int attribute_size() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 1;
  const ::xilinx::config::Attribute& attribute(int index) const;
  ::xilinx::config::Attribute* mutable_attribute(int index);
  ::xilinx::config::Attribute* add_attribute();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::Attribute >*
      mutable_attribute();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::Attribute >&
      attribute() const;

  // @@protoc_insertion_point(class_scope:xilinx.config.AttributeResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::Attribute > attribute_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LandmarkResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.LandmarkResult) */ {
 public:
  LandmarkResult();
  virtual ~LandmarkResult();

  LandmarkResult(const LandmarkResult& from);

  inline LandmarkResult& operator=(const LandmarkResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LandmarkResult(LandmarkResult&& from) noexcept
    : LandmarkResult() {
    *this = ::std::move(from);
  }

  inline LandmarkResult& operator=(LandmarkResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LandmarkResult& default_instance();

  static inline const LandmarkResult* internal_default_instance() {
    return reinterpret_cast<const LandmarkResult*>(
               &_LandmarkResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(LandmarkResult* other);
  friend void swap(LandmarkResult& a, LandmarkResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LandmarkResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LandmarkResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LandmarkResult& from);
  void MergeFrom(const LandmarkResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LandmarkResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.Point point = 2;
  int point_size() const;
  void clear_point();
  static const int kPointFieldNumber = 2;
  const ::xilinx::config::Point& point(int index) const;
  ::xilinx::config::Point* mutable_point(int index);
  ::xilinx::config::Point* add_point();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::Point >*
      mutable_point();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::Point >&
      point() const;

  // float score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  float score() const;
  void set_score(float value);

  // uint32 gender = 3;
  void clear_gender();
  static const int kGenderFieldNumber = 3;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // uint32 age = 4;
  void clear_age();
  static const int kAgeFieldNumber = 4;
  ::google::protobuf::uint32 age() const;
  void set_age(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xilinx.config.LandmarkResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::Point > point_;
  float score_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 age_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetectResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.DetectResult) */ {
 public:
  DetectResult();
  virtual ~DetectResult();

  DetectResult(const DetectResult& from);

  inline DetectResult& operator=(const DetectResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectResult(DetectResult&& from) noexcept
    : DetectResult() {
    *this = ::std::move(from);
  }

  inline DetectResult& operator=(DetectResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectResult& default_instance();

  static inline const DetectResult* internal_default_instance() {
    return reinterpret_cast<const DetectResult*>(
               &_DetectResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(DetectResult* other);
  friend void swap(DetectResult& a, DetectResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectResult* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectResult& from);
  void MergeFrom(const DetectResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.BoundingBox bounding_box = 1;
  int bounding_box_size() const;
  void clear_bounding_box();
  static const int kBoundingBoxFieldNumber = 1;
  const ::xilinx::config::BoundingBox& bounding_box(int index) const;
  ::xilinx::config::BoundingBox* mutable_bounding_box(int index);
  ::xilinx::config::BoundingBox* add_bounding_box();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >*
      mutable_bounding_box();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >&
      bounding_box() const;

  // @@protoc_insertion_point(class_scope:xilinx.config.DetectResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox > bounding_box_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefineDetResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.RefineDetResult) */ {
 public:
  RefineDetResult();
  virtual ~RefineDetResult();

  RefineDetResult(const RefineDetResult& from);

  inline RefineDetResult& operator=(const RefineDetResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefineDetResult(RefineDetResult&& from) noexcept
    : RefineDetResult() {
    *this = ::std::move(from);
  }

  inline RefineDetResult& operator=(RefineDetResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefineDetResult& default_instance();

  static inline const RefineDetResult* internal_default_instance() {
    return reinterpret_cast<const RefineDetResult*>(
               &_RefineDetResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(RefineDetResult* other);
  friend void swap(RefineDetResult& a, RefineDetResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefineDetResult* New() const PROTOBUF_FINAL { return New(NULL); }

  RefineDetResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefineDetResult& from);
  void MergeFrom(const RefineDetResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefineDetResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.BoundingBox bounding_box = 1;
  int bounding_box_size() const;
  void clear_bounding_box();
  static const int kBoundingBoxFieldNumber = 1;
  const ::xilinx::config::BoundingBox& bounding_box(int index) const;
  ::xilinx::config::BoundingBox* mutable_bounding_box(int index);
  ::xilinx::config::BoundingBox* add_bounding_box();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >*
      mutable_bounding_box();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >&
      bounding_box() const;

  // @@protoc_insertion_point(class_scope:xilinx.config.RefineDetResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox > bounding_box_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Score : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.Score) */ {
 public:
  Score();
  virtual ~Score();

  Score(const Score& from);

  inline Score& operator=(const Score& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Score(Score&& from) noexcept
    : Score() {
    *this = ::std::move(from);
  }

  inline Score& operator=(Score&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Score& default_instance();

  static inline const Score* internal_default_instance() {
    return reinterpret_cast<const Score*>(
               &_Score_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(Score* other);
  friend void swap(Score& a, Score& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Score* New() const PROTOBUF_FINAL { return New(NULL); }

  Score* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Score& from);
  void MergeFrom(const Score& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Score* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // float score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:xilinx.config.Score)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  float score_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClassificationResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.ClassificationResult) */ {
 public:
  ClassificationResult();
  virtual ~ClassificationResult();

  ClassificationResult(const ClassificationResult& from);

  inline ClassificationResult& operator=(const ClassificationResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassificationResult(ClassificationResult&& from) noexcept
    : ClassificationResult() {
    *this = ::std::move(from);
  }

  inline ClassificationResult& operator=(ClassificationResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassificationResult& default_instance();

  static inline const ClassificationResult* internal_default_instance() {
    return reinterpret_cast<const ClassificationResult*>(
               &_ClassificationResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ClassificationResult* other);
  friend void swap(ClassificationResult& a, ClassificationResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassificationResult* New() const PROTOBUF_FINAL { return New(NULL); }

  ClassificationResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClassificationResult& from);
  void MergeFrom(const ClassificationResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClassificationResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xilinx.config.Score score = 1;
  int score_size() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  const ::xilinx::config::Score& score(int index) const;
  ::xilinx::config::Score* mutable_score(int index);
  ::xilinx::config::Score* add_score();
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::Score >*
      mutable_score();
  const ::google::protobuf::RepeatedPtrField< ::xilinx::config::Score >&
      score() const;

  // @@protoc_insertion_point(class_scope:xilinx.config.ClassificationResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xilinx::config::Score > score_;
  mutable int _cached_size_;
  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DpuModelResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xilinx.config.DpuModelResult) */ {
 public:
  DpuModelResult();
  virtual ~DpuModelResult();

  DpuModelResult(const DpuModelResult& from);

  inline DpuModelResult& operator=(const DpuModelResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DpuModelResult(DpuModelResult&& from) noexcept
    : DpuModelResult() {
    *this = ::std::move(from);
  }

  inline DpuModelResult& operator=(DpuModelResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DpuModelResult& default_instance();

  enum DpuModelResultCase {
    kLandmarkResult = 1,
    kDetectResult = 2,
    kAttributeResult = 3,
    kRefineDetResult = 4,
    kClassificationResult = 5,
    DPU_MODEL_RESULT_NOT_SET = 0,
  };

  static inline const DpuModelResult* internal_default_instance() {
    return reinterpret_cast<const DpuModelResult*>(
               &_DpuModelResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(DpuModelResult* other);
  friend void swap(DpuModelResult& a, DpuModelResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DpuModelResult* New() const PROTOBUF_FINAL { return New(NULL); }

  DpuModelResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DpuModelResult& from);
  void MergeFrom(const DpuModelResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DpuModelResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xilinx.config.LandmarkResult landmark_result = 1;
  bool has_landmark_result() const;
  void clear_landmark_result();
  static const int kLandmarkResultFieldNumber = 1;
  const ::xilinx::config::LandmarkResult& landmark_result() const;
  ::xilinx::config::LandmarkResult* mutable_landmark_result();
  ::xilinx::config::LandmarkResult* release_landmark_result();
  void set_allocated_landmark_result(::xilinx::config::LandmarkResult* landmark_result);

  // .xilinx.config.DetectResult detect_result = 2;
  bool has_detect_result() const;
  void clear_detect_result();
  static const int kDetectResultFieldNumber = 2;
  const ::xilinx::config::DetectResult& detect_result() const;
  ::xilinx::config::DetectResult* mutable_detect_result();
  ::xilinx::config::DetectResult* release_detect_result();
  void set_allocated_detect_result(::xilinx::config::DetectResult* detect_result);

  // .xilinx.config.AttributeResult attribute_result = 3;
  bool has_attribute_result() const;
  void clear_attribute_result();
  static const int kAttributeResultFieldNumber = 3;
  const ::xilinx::config::AttributeResult& attribute_result() const;
  ::xilinx::config::AttributeResult* mutable_attribute_result();
  ::xilinx::config::AttributeResult* release_attribute_result();
  void set_allocated_attribute_result(::xilinx::config::AttributeResult* attribute_result);

  // .xilinx.config.RefineDetResult refine_det_result = 4;
  bool has_refine_det_result() const;
  void clear_refine_det_result();
  static const int kRefineDetResultFieldNumber = 4;
  const ::xilinx::config::RefineDetResult& refine_det_result() const;
  ::xilinx::config::RefineDetResult* mutable_refine_det_result();
  ::xilinx::config::RefineDetResult* release_refine_det_result();
  void set_allocated_refine_det_result(::xilinx::config::RefineDetResult* refine_det_result);

  // .xilinx.config.ClassificationResult classification_result = 5;
  bool has_classification_result() const;
  void clear_classification_result();
  static const int kClassificationResultFieldNumber = 5;
  const ::xilinx::config::ClassificationResult& classification_result() const;
  ::xilinx::config::ClassificationResult* mutable_classification_result();
  ::xilinx::config::ClassificationResult* release_classification_result();
  void set_allocated_classification_result(::xilinx::config::ClassificationResult* classification_result);

  DpuModelResultCase dpu_model_result_case() const;
  // @@protoc_insertion_point(class_scope:xilinx.config.DpuModelResult)
 private:
  void set_has_landmark_result();
  void set_has_detect_result();
  void set_has_attribute_result();
  void set_has_refine_det_result();
  void set_has_classification_result();

  inline bool has_dpu_model_result() const;
  void clear_dpu_model_result();
  inline void clear_has_dpu_model_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DpuModelResultUnion {
    DpuModelResultUnion() {}
    ::xilinx::config::LandmarkResult* landmark_result_;
    ::xilinx::config::DetectResult* detect_result_;
    ::xilinx::config::AttributeResult* attribute_result_;
    ::xilinx::config::RefineDetResult* refine_det_result_;
    ::xilinx::config::ClassificationResult* classification_result_;
  } dpu_model_result_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// YoloV3Param

// int32 num_classes = 1;
inline void YoloV3Param::clear_num_classes() {
  num_classes_ = 0;
}
inline ::google::protobuf::int32 YoloV3Param::num_classes() const {
  // @@protoc_insertion_point(field_get:xilinx.config.YoloV3Param.num_classes)
  return num_classes_;
}
inline void YoloV3Param::set_num_classes(::google::protobuf::int32 value) {
  
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.YoloV3Param.num_classes)
}

// int32 anchorCnt = 2;
inline void YoloV3Param::clear_anchorcnt() {
  anchorcnt_ = 0;
}
inline ::google::protobuf::int32 YoloV3Param::anchorcnt() const {
  // @@protoc_insertion_point(field_get:xilinx.config.YoloV3Param.anchorCnt)
  return anchorcnt_;
}
inline void YoloV3Param::set_anchorcnt(::google::protobuf::int32 value) {
  
  anchorcnt_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.YoloV3Param.anchorCnt)
}

// float conf_threshold = 3;
inline void YoloV3Param::clear_conf_threshold() {
  conf_threshold_ = 0;
}
inline float YoloV3Param::conf_threshold() const {
  // @@protoc_insertion_point(field_get:xilinx.config.YoloV3Param.conf_threshold)
  return conf_threshold_;
}
inline void YoloV3Param::set_conf_threshold(float value) {
  
  conf_threshold_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.YoloV3Param.conf_threshold)
}

// float nms_threshold = 4;
inline void YoloV3Param::clear_nms_threshold() {
  nms_threshold_ = 0;
}
inline float YoloV3Param::nms_threshold() const {
  // @@protoc_insertion_point(field_get:xilinx.config.YoloV3Param.nms_threshold)
  return nms_threshold_;
}
inline void YoloV3Param::set_nms_threshold(float value) {
  
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.YoloV3Param.nms_threshold)
}

// repeated float biases = 5;
inline int YoloV3Param::biases_size() const {
  return biases_.size();
}
inline void YoloV3Param::clear_biases() {
  biases_.Clear();
}
inline float YoloV3Param::biases(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.YoloV3Param.biases)
  return biases_.Get(index);
}
inline void YoloV3Param::set_biases(int index, float value) {
  biases_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.YoloV3Param.biases)
}
inline void YoloV3Param::add_biases(float value) {
  biases_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.YoloV3Param.biases)
}
inline const ::google::protobuf::RepeatedField< float >&
YoloV3Param::biases() const {
  // @@protoc_insertion_point(field_list:xilinx.config.YoloV3Param.biases)
  return biases_;
}
inline ::google::protobuf::RepeatedField< float >*
YoloV3Param::mutable_biases() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.YoloV3Param.biases)
  return &biases_;
}

// bool test_mAP = 6;
inline void YoloV3Param::clear_test_map() {
  test_map_ = false;
}
inline bool YoloV3Param::test_map() const {
  // @@protoc_insertion_point(field_get:xilinx.config.YoloV3Param.test_mAP)
  return test_map_;
}
inline void YoloV3Param::set_test_map(bool value) {
  
  test_map_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.YoloV3Param.test_mAP)
}

// -------------------------------------------------------------------

// PriorBoxParam

// int32 layer_width = 1;
inline void PriorBoxParam::clear_layer_width() {
  layer_width_ = 0;
}
inline ::google::protobuf::int32 PriorBoxParam::layer_width() const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.layer_width)
  return layer_width_;
}
inline void PriorBoxParam::set_layer_width(::google::protobuf::int32 value) {
  
  layer_width_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.layer_width)
}

// int32 layer_height = 2;
inline void PriorBoxParam::clear_layer_height() {
  layer_height_ = 0;
}
inline ::google::protobuf::int32 PriorBoxParam::layer_height() const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.layer_height)
  return layer_height_;
}
inline void PriorBoxParam::set_layer_height(::google::protobuf::int32 value) {
  
  layer_height_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.layer_height)
}

// repeated float variances = 4;
inline int PriorBoxParam::variances_size() const {
  return variances_.size();
}
inline void PriorBoxParam::clear_variances() {
  variances_.Clear();
}
inline float PriorBoxParam::variances(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.variances)
  return variances_.Get(index);
}
inline void PriorBoxParam::set_variances(int index, float value) {
  variances_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.variances)
}
inline void PriorBoxParam::add_variances(float value) {
  variances_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.PriorBoxParam.variances)
}
inline const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::variances() const {
  // @@protoc_insertion_point(field_list:xilinx.config.PriorBoxParam.variances)
  return variances_;
}
inline ::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_variances() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.PriorBoxParam.variances)
  return &variances_;
}

// repeated float min_sizes = 5;
inline int PriorBoxParam::min_sizes_size() const {
  return min_sizes_.size();
}
inline void PriorBoxParam::clear_min_sizes() {
  min_sizes_.Clear();
}
inline float PriorBoxParam::min_sizes(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.min_sizes)
  return min_sizes_.Get(index);
}
inline void PriorBoxParam::set_min_sizes(int index, float value) {
  min_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.min_sizes)
}
inline void PriorBoxParam::add_min_sizes(float value) {
  min_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.PriorBoxParam.min_sizes)
}
inline const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::min_sizes() const {
  // @@protoc_insertion_point(field_list:xilinx.config.PriorBoxParam.min_sizes)
  return min_sizes_;
}
inline ::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_min_sizes() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.PriorBoxParam.min_sizes)
  return &min_sizes_;
}

// repeated float max_sizes = 6;
inline int PriorBoxParam::max_sizes_size() const {
  return max_sizes_.size();
}
inline void PriorBoxParam::clear_max_sizes() {
  max_sizes_.Clear();
}
inline float PriorBoxParam::max_sizes(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.max_sizes)
  return max_sizes_.Get(index);
}
inline void PriorBoxParam::set_max_sizes(int index, float value) {
  max_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.max_sizes)
}
inline void PriorBoxParam::add_max_sizes(float value) {
  max_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.PriorBoxParam.max_sizes)
}
inline const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::max_sizes() const {
  // @@protoc_insertion_point(field_list:xilinx.config.PriorBoxParam.max_sizes)
  return max_sizes_;
}
inline ::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_max_sizes() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.PriorBoxParam.max_sizes)
  return &max_sizes_;
}

// repeated float aspect_ratios = 7;
inline int PriorBoxParam::aspect_ratios_size() const {
  return aspect_ratios_.size();
}
inline void PriorBoxParam::clear_aspect_ratios() {
  aspect_ratios_.Clear();
}
inline float PriorBoxParam::aspect_ratios(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.aspect_ratios)
  return aspect_ratios_.Get(index);
}
inline void PriorBoxParam::set_aspect_ratios(int index, float value) {
  aspect_ratios_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.aspect_ratios)
}
inline void PriorBoxParam::add_aspect_ratios(float value) {
  aspect_ratios_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.PriorBoxParam.aspect_ratios)
}
inline const ::google::protobuf::RepeatedField< float >&
PriorBoxParam::aspect_ratios() const {
  // @@protoc_insertion_point(field_list:xilinx.config.PriorBoxParam.aspect_ratios)
  return aspect_ratios_;
}
inline ::google::protobuf::RepeatedField< float >*
PriorBoxParam::mutable_aspect_ratios() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.PriorBoxParam.aspect_ratios)
  return &aspect_ratios_;
}

// float offset = 8;
inline void PriorBoxParam::clear_offset() {
  offset_ = 0;
}
inline float PriorBoxParam::offset() const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.offset)
  return offset_;
}
inline void PriorBoxParam::set_offset(float value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.offset)
}

// float step_width = 9;
inline void PriorBoxParam::clear_step_width() {
  step_width_ = 0;
}
inline float PriorBoxParam::step_width() const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.step_width)
  return step_width_;
}
inline void PriorBoxParam::set_step_width(float value) {
  
  step_width_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.step_width)
}

// float step_height = 10;
inline void PriorBoxParam::clear_step_height() {
  step_height_ = 0;
}
inline float PriorBoxParam::step_height() const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.step_height)
  return step_height_;
}
inline void PriorBoxParam::set_step_height(float value) {
  
  step_height_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.step_height)
}

// bool flip = 11;
inline void PriorBoxParam::clear_flip() {
  flip_ = false;
}
inline bool PriorBoxParam::flip() const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.flip)
  return flip_;
}
inline void PriorBoxParam::set_flip(bool value) {
  
  flip_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.flip)
}

// bool clip = 12;
inline void PriorBoxParam::clear_clip() {
  clip_ = false;
}
inline bool PriorBoxParam::clip() const {
  // @@protoc_insertion_point(field_get:xilinx.config.PriorBoxParam.clip)
  return clip_;
}
inline void PriorBoxParam::set_clip(bool value) {
  
  clip_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.PriorBoxParam.clip)
}

// -------------------------------------------------------------------

// SSDParam

// repeated .xilinx.config.PriorBoxParam prior_box_param = 1;
inline int SSDParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
inline void SSDParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
inline const ::xilinx::config::PriorBoxParam& SSDParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.SSDParam.prior_box_param)
  return prior_box_param_.Get(index);
}
inline ::xilinx::config::PriorBoxParam* SSDParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.SSDParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
inline ::xilinx::config::PriorBoxParam* SSDParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:xilinx.config.SSDParam.prior_box_param)
  return prior_box_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >*
SSDParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.SSDParam.prior_box_param)
  return &prior_box_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >&
SSDParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:xilinx.config.SSDParam.prior_box_param)
  return prior_box_param_;
}

// int32 num_classes = 2;
inline void SSDParam::clear_num_classes() {
  num_classes_ = 0;
}
inline ::google::protobuf::int32 SSDParam::num_classes() const {
  // @@protoc_insertion_point(field_get:xilinx.config.SSDParam.num_classes)
  return num_classes_;
}
inline void SSDParam::set_num_classes(::google::protobuf::int32 value) {
  
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.SSDParam.num_classes)
}

// float nms_threshold = 3;
inline void SSDParam::clear_nms_threshold() {
  nms_threshold_ = 0;
}
inline float SSDParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:xilinx.config.SSDParam.nms_threshold)
  return nms_threshold_;
}
inline void SSDParam::set_nms_threshold(float value) {
  
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.SSDParam.nms_threshold)
}

// repeated float conf_threshold = 4;
inline int SSDParam::conf_threshold_size() const {
  return conf_threshold_.size();
}
inline void SSDParam::clear_conf_threshold() {
  conf_threshold_.Clear();
}
inline float SSDParam::conf_threshold(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.SSDParam.conf_threshold)
  return conf_threshold_.Get(index);
}
inline void SSDParam::set_conf_threshold(int index, float value) {
  conf_threshold_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.SSDParam.conf_threshold)
}
inline void SSDParam::add_conf_threshold(float value) {
  conf_threshold_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.SSDParam.conf_threshold)
}
inline const ::google::protobuf::RepeatedField< float >&
SSDParam::conf_threshold() const {
  // @@protoc_insertion_point(field_list:xilinx.config.SSDParam.conf_threshold)
  return conf_threshold_;
}
inline ::google::protobuf::RepeatedField< float >*
SSDParam::mutable_conf_threshold() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.SSDParam.conf_threshold)
  return &conf_threshold_;
}

// int32 keep_top_k = 5;
inline void SSDParam::clear_keep_top_k() {
  keep_top_k_ = 0;
}
inline ::google::protobuf::int32 SSDParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:xilinx.config.SSDParam.keep_top_k)
  return keep_top_k_;
}
inline void SSDParam::set_keep_top_k(::google::protobuf::int32 value) {
  
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.SSDParam.keep_top_k)
}

// int32 top_k = 6;
inline void SSDParam::clear_top_k() {
  top_k_ = 0;
}
inline ::google::protobuf::int32 SSDParam::top_k() const {
  // @@protoc_insertion_point(field_get:xilinx.config.SSDParam.top_k)
  return top_k_;
}
inline void SSDParam::set_top_k(::google::protobuf::int32 value) {
  
  top_k_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.SSDParam.top_k)
}

// -------------------------------------------------------------------

// RefineDetParam

// repeated .xilinx.config.PriorBoxParam prior_box_param = 1;
inline int RefineDetParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
inline void RefineDetParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
inline const ::xilinx::config::PriorBoxParam& RefineDetParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.RefineDetParam.prior_box_param)
  return prior_box_param_.Get(index);
}
inline ::xilinx::config::PriorBoxParam* RefineDetParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.RefineDetParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
inline ::xilinx::config::PriorBoxParam* RefineDetParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:xilinx.config.RefineDetParam.prior_box_param)
  return prior_box_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >*
RefineDetParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.RefineDetParam.prior_box_param)
  return &prior_box_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >&
RefineDetParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:xilinx.config.RefineDetParam.prior_box_param)
  return prior_box_param_;
}

// int32 num_classes = 2;
inline void RefineDetParam::clear_num_classes() {
  num_classes_ = 0;
}
inline ::google::protobuf::int32 RefineDetParam::num_classes() const {
  // @@protoc_insertion_point(field_get:xilinx.config.RefineDetParam.num_classes)
  return num_classes_;
}
inline void RefineDetParam::set_num_classes(::google::protobuf::int32 value) {
  
  num_classes_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.RefineDetParam.num_classes)
}

// float nms_threshold = 3;
inline void RefineDetParam::clear_nms_threshold() {
  nms_threshold_ = 0;
}
inline float RefineDetParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:xilinx.config.RefineDetParam.nms_threshold)
  return nms_threshold_;
}
inline void RefineDetParam::set_nms_threshold(float value) {
  
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.RefineDetParam.nms_threshold)
}

// repeated float conf_threshold = 4;
inline int RefineDetParam::conf_threshold_size() const {
  return conf_threshold_.size();
}
inline void RefineDetParam::clear_conf_threshold() {
  conf_threshold_.Clear();
}
inline float RefineDetParam::conf_threshold(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.RefineDetParam.conf_threshold)
  return conf_threshold_.Get(index);
}
inline void RefineDetParam::set_conf_threshold(int index, float value) {
  conf_threshold_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.RefineDetParam.conf_threshold)
}
inline void RefineDetParam::add_conf_threshold(float value) {
  conf_threshold_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.RefineDetParam.conf_threshold)
}
inline const ::google::protobuf::RepeatedField< float >&
RefineDetParam::conf_threshold() const {
  // @@protoc_insertion_point(field_list:xilinx.config.RefineDetParam.conf_threshold)
  return conf_threshold_;
}
inline ::google::protobuf::RepeatedField< float >*
RefineDetParam::mutable_conf_threshold() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.RefineDetParam.conf_threshold)
  return &conf_threshold_;
}

// int32 keep_top_k = 5;
inline void RefineDetParam::clear_keep_top_k() {
  keep_top_k_ = 0;
}
inline ::google::protobuf::int32 RefineDetParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:xilinx.config.RefineDetParam.keep_top_k)
  return keep_top_k_;
}
inline void RefineDetParam::set_keep_top_k(::google::protobuf::int32 value) {
  
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.RefineDetParam.keep_top_k)
}

// int32 top_k = 6;
inline void RefineDetParam::clear_top_k() {
  top_k_ = 0;
}
inline ::google::protobuf::int32 RefineDetParam::top_k() const {
  // @@protoc_insertion_point(field_get:xilinx.config.RefineDetParam.top_k)
  return top_k_;
}
inline void RefineDetParam::set_top_k(::google::protobuf::int32 value) {
  
  top_k_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.RefineDetParam.top_k)
}

// -------------------------------------------------------------------

// ClassificationParam

// int32 top_k = 1;
inline void ClassificationParam::clear_top_k() {
  top_k_ = 0;
}
inline ::google::protobuf::int32 ClassificationParam::top_k() const {
  // @@protoc_insertion_point(field_get:xilinx.config.ClassificationParam.top_k)
  return top_k_;
}
inline void ClassificationParam::set_top_k(::google::protobuf::int32 value) {
  
  top_k_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.ClassificationParam.top_k)
}

// bool test_accuracy = 2;
inline void ClassificationParam::clear_test_accuracy() {
  test_accuracy_ = false;
}
inline bool ClassificationParam::test_accuracy() const {
  // @@protoc_insertion_point(field_get:xilinx.config.ClassificationParam.test_accuracy)
  return test_accuracy_;
}
inline void ClassificationParam::set_test_accuracy(bool value) {
  
  test_accuracy_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.ClassificationParam.test_accuracy)
}

// -------------------------------------------------------------------

// DenseBoxParam

// int32 num_of_classes = 1;
inline void DenseBoxParam::clear_num_of_classes() {
  num_of_classes_ = 0;
}
inline ::google::protobuf::int32 DenseBoxParam::num_of_classes() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DenseBoxParam.num_of_classes)
  return num_of_classes_;
}
inline void DenseBoxParam::set_num_of_classes(::google::protobuf::int32 value) {
  
  num_of_classes_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.DenseBoxParam.num_of_classes)
}

// float nms_threshold = 2;
inline void DenseBoxParam::clear_nms_threshold() {
  nms_threshold_ = 0;
}
inline float DenseBoxParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DenseBoxParam.nms_threshold)
  return nms_threshold_;
}
inline void DenseBoxParam::set_nms_threshold(float value) {
  
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.DenseBoxParam.nms_threshold)
}

// float det_threshold = 3;
inline void DenseBoxParam::clear_det_threshold() {
  det_threshold_ = 0;
}
inline float DenseBoxParam::det_threshold() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DenseBoxParam.det_threshold)
  return det_threshold_;
}
inline void DenseBoxParam::set_det_threshold(float value) {
  
  det_threshold_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.DenseBoxParam.det_threshold)
}

// -------------------------------------------------------------------

// MultiTaskParam

// repeated float th_conf = 1;
inline int MultiTaskParam::th_conf_size() const {
  return th_conf_.size();
}
inline void MultiTaskParam::clear_th_conf() {
  th_conf_.Clear();
}
inline float MultiTaskParam::th_conf(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.MultiTaskParam.th_conf)
  return th_conf_.Get(index);
}
inline void MultiTaskParam::set_th_conf(int index, float value) {
  th_conf_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.MultiTaskParam.th_conf)
}
inline void MultiTaskParam::add_th_conf(float value) {
  th_conf_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.MultiTaskParam.th_conf)
}
inline const ::google::protobuf::RepeatedField< float >&
MultiTaskParam::th_conf() const {
  // @@protoc_insertion_point(field_list:xilinx.config.MultiTaskParam.th_conf)
  return th_conf_;
}
inline ::google::protobuf::RepeatedField< float >*
MultiTaskParam::mutable_th_conf() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.MultiTaskParam.th_conf)
  return &th_conf_;
}

// int32 num_of_detection_classes = 2;
inline void MultiTaskParam::clear_num_of_detection_classes() {
  num_of_detection_classes_ = 0;
}
inline ::google::protobuf::int32 MultiTaskParam::num_of_detection_classes() const {
  // @@protoc_insertion_point(field_get:xilinx.config.MultiTaskParam.num_of_detection_classes)
  return num_of_detection_classes_;
}
inline void MultiTaskParam::set_num_of_detection_classes(::google::protobuf::int32 value) {
  
  num_of_detection_classes_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.MultiTaskParam.num_of_detection_classes)
}

// int32 num_of_segmentation_classes = 3;
inline void MultiTaskParam::clear_num_of_segmentation_classes() {
  num_of_segmentation_classes_ = 0;
}
inline ::google::protobuf::int32 MultiTaskParam::num_of_segmentation_classes() const {
  // @@protoc_insertion_point(field_get:xilinx.config.MultiTaskParam.num_of_segmentation_classes)
  return num_of_segmentation_classes_;
}
inline void MultiTaskParam::set_num_of_segmentation_classes(::google::protobuf::int32 value) {
  
  num_of_segmentation_classes_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.MultiTaskParam.num_of_segmentation_classes)
}

// int32 keep_top_k = 4;
inline void MultiTaskParam::clear_keep_top_k() {
  keep_top_k_ = 0;
}
inline ::google::protobuf::int32 MultiTaskParam::keep_top_k() const {
  // @@protoc_insertion_point(field_get:xilinx.config.MultiTaskParam.keep_top_k)
  return keep_top_k_;
}
inline void MultiTaskParam::set_keep_top_k(::google::protobuf::int32 value) {
  
  keep_top_k_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.MultiTaskParam.keep_top_k)
}

// int32 top_k = 5;
inline void MultiTaskParam::clear_top_k() {
  top_k_ = 0;
}
inline ::google::protobuf::int32 MultiTaskParam::top_k() const {
  // @@protoc_insertion_point(field_get:xilinx.config.MultiTaskParam.top_k)
  return top_k_;
}
inline void MultiTaskParam::set_top_k(::google::protobuf::int32 value) {
  
  top_k_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.MultiTaskParam.top_k)
}

// float nms_threshold = 6;
inline void MultiTaskParam::clear_nms_threshold() {
  nms_threshold_ = 0;
}
inline float MultiTaskParam::nms_threshold() const {
  // @@protoc_insertion_point(field_get:xilinx.config.MultiTaskParam.nms_threshold)
  return nms_threshold_;
}
inline void MultiTaskParam::set_nms_threshold(float value) {
  
  nms_threshold_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.MultiTaskParam.nms_threshold)
}

// repeated .xilinx.config.PriorBoxParam prior_box_param = 7;
inline int MultiTaskParam::prior_box_param_size() const {
  return prior_box_param_.size();
}
inline void MultiTaskParam::clear_prior_box_param() {
  prior_box_param_.Clear();
}
inline const ::xilinx::config::PriorBoxParam& MultiTaskParam::prior_box_param(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.MultiTaskParam.prior_box_param)
  return prior_box_param_.Get(index);
}
inline ::xilinx::config::PriorBoxParam* MultiTaskParam::mutable_prior_box_param(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.MultiTaskParam.prior_box_param)
  return prior_box_param_.Mutable(index);
}
inline ::xilinx::config::PriorBoxParam* MultiTaskParam::add_prior_box_param() {
  // @@protoc_insertion_point(field_add:xilinx.config.MultiTaskParam.prior_box_param)
  return prior_box_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >*
MultiTaskParam::mutable_prior_box_param() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.MultiTaskParam.prior_box_param)
  return &prior_box_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::PriorBoxParam >&
MultiTaskParam::prior_box_param() const {
  // @@protoc_insertion_point(field_list:xilinx.config.MultiTaskParam.prior_box_param)
  return prior_box_param_;
}

// -------------------------------------------------------------------

// DpuKernel

// string name = 1;
inline void DpuKernel::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DpuKernel::name() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuKernel.name)
  return name_.GetNoArena();
}
inline void DpuKernel::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xilinx.config.DpuKernel.name)
}
#if LANG_CXX11
inline void DpuKernel::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xilinx.config.DpuKernel.name)
}
#endif
inline void DpuKernel::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xilinx.config.DpuKernel.name)
}
inline void DpuKernel::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xilinx.config.DpuKernel.name)
}
inline ::std::string* DpuKernel::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuKernel.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DpuKernel::release_name() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuKernel.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DpuKernel::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuKernel.name)
}

// repeated string input = 2;
inline int DpuKernel::input_size() const {
  return input_.size();
}
inline void DpuKernel::clear_input() {
  input_.Clear();
}
inline const ::std::string& DpuKernel::input(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuKernel.input)
  return input_.Get(index);
}
inline ::std::string* DpuKernel::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuKernel.input)
  return input_.Mutable(index);
}
inline void DpuKernel::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xilinx.config.DpuKernel.input)
  input_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DpuKernel::set_input(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xilinx.config.DpuKernel.input)
  input_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DpuKernel::set_input(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xilinx.config.DpuKernel.input)
}
inline void DpuKernel::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xilinx.config.DpuKernel.input)
}
inline ::std::string* DpuKernel::add_input() {
  // @@protoc_insertion_point(field_add_mutable:xilinx.config.DpuKernel.input)
  return input_.Add();
}
inline void DpuKernel::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xilinx.config.DpuKernel.input)
}
#if LANG_CXX11
inline void DpuKernel::add_input(::std::string&& value) {
  input_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xilinx.config.DpuKernel.input)
}
#endif
inline void DpuKernel::add_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xilinx.config.DpuKernel.input)
}
inline void DpuKernel::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xilinx.config.DpuKernel.input)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DpuKernel::input() const {
  // @@protoc_insertion_point(field_list:xilinx.config.DpuKernel.input)
  return input_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DpuKernel::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.DpuKernel.input)
  return &input_;
}

// repeated string output = 3;
inline int DpuKernel::output_size() const {
  return output_.size();
}
inline void DpuKernel::clear_output() {
  output_.Clear();
}
inline const ::std::string& DpuKernel::output(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuKernel.output)
  return output_.Get(index);
}
inline ::std::string* DpuKernel::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuKernel.output)
  return output_.Mutable(index);
}
inline void DpuKernel::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xilinx.config.DpuKernel.output)
  output_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DpuKernel::set_output(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xilinx.config.DpuKernel.output)
  output_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DpuKernel::set_output(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xilinx.config.DpuKernel.output)
}
inline void DpuKernel::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xilinx.config.DpuKernel.output)
}
inline ::std::string* DpuKernel::add_output() {
  // @@protoc_insertion_point(field_add_mutable:xilinx.config.DpuKernel.output)
  return output_.Add();
}
inline void DpuKernel::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xilinx.config.DpuKernel.output)
}
#if LANG_CXX11
inline void DpuKernel::add_output(::std::string&& value) {
  output_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xilinx.config.DpuKernel.output)
}
#endif
inline void DpuKernel::add_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xilinx.config.DpuKernel.output)
}
inline void DpuKernel::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xilinx.config.DpuKernel.output)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DpuKernel::output() const {
  // @@protoc_insertion_point(field_list:xilinx.config.DpuKernel.output)
  return output_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DpuKernel::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.DpuKernel.output)
  return &output_;
}

// repeated float mean = 4;
inline int DpuKernel::mean_size() const {
  return mean_.size();
}
inline void DpuKernel::clear_mean() {
  mean_.Clear();
}
inline float DpuKernel::mean(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuKernel.mean)
  return mean_.Get(index);
}
inline void DpuKernel::set_mean(int index, float value) {
  mean_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.DpuKernel.mean)
}
inline void DpuKernel::add_mean(float value) {
  mean_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.DpuKernel.mean)
}
inline const ::google::protobuf::RepeatedField< float >&
DpuKernel::mean() const {
  // @@protoc_insertion_point(field_list:xilinx.config.DpuKernel.mean)
  return mean_;
}
inline ::google::protobuf::RepeatedField< float >*
DpuKernel::mutable_mean() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.DpuKernel.mean)
  return &mean_;
}

// repeated float scale = 5;
inline int DpuKernel::scale_size() const {
  return scale_.size();
}
inline void DpuKernel::clear_scale() {
  scale_.Clear();
}
inline float DpuKernel::scale(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuKernel.scale)
  return scale_.Get(index);
}
inline void DpuKernel::set_scale(int index, float value) {
  scale_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.DpuKernel.scale)
}
inline void DpuKernel::add_scale(float value) {
  scale_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.DpuKernel.scale)
}
inline const ::google::protobuf::RepeatedField< float >&
DpuKernel::scale() const {
  // @@protoc_insertion_point(field_list:xilinx.config.DpuKernel.scale)
  return scale_;
}
inline ::google::protobuf::RepeatedField< float >*
DpuKernel::mutable_scale() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.DpuKernel.scale)
  return &scale_;
}

// -------------------------------------------------------------------

// DpuModel

// string name = 1;
inline void DpuModel::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DpuModel::name() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.name)
  return name_.GetNoArena();
}
inline void DpuModel::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xilinx.config.DpuModel.name)
}
#if LANG_CXX11
inline void DpuModel::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xilinx.config.DpuModel.name)
}
#endif
inline void DpuModel::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xilinx.config.DpuModel.name)
}
inline void DpuModel::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xilinx.config.DpuModel.name)
}
inline ::std::string* DpuModel::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DpuModel::release_name() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModel.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DpuModel::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModel.name)
}

// repeated .xilinx.config.DpuKernel kernel = 2;
inline int DpuModel::kernel_size() const {
  return kernel_.size();
}
inline void DpuModel::clear_kernel() {
  kernel_.Clear();
}
inline const ::xilinx::config::DpuKernel& DpuModel::kernel(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.kernel)
  return kernel_.Get(index);
}
inline ::xilinx::config::DpuKernel* DpuModel::mutable_kernel(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.kernel)
  return kernel_.Mutable(index);
}
inline ::xilinx::config::DpuKernel* DpuModel::add_kernel() {
  // @@protoc_insertion_point(field_add:xilinx.config.DpuModel.kernel)
  return kernel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuKernel >*
DpuModel::mutable_kernel() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.DpuModel.kernel)
  return &kernel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuKernel >&
DpuModel::kernel() const {
  // @@protoc_insertion_point(field_list:xilinx.config.DpuModel.kernel)
  return kernel_;
}

// .xilinx.config.DpuModel.ModelType model_type = 3;
inline void DpuModel::clear_model_type() {
  model_type_ = 0;
}
inline ::xilinx::config::DpuModel_ModelType DpuModel::model_type() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.model_type)
  return static_cast< ::xilinx::config::DpuModel_ModelType >(model_type_);
}
inline void DpuModel::set_model_type(::xilinx::config::DpuModel_ModelType value) {
  
  model_type_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.DpuModel.model_type)
}

// .xilinx.config.RefineDetParam refine_det_param = 4;
inline bool DpuModel::has_refine_det_param() const {
  return this != internal_default_instance() && refine_det_param_ != NULL;
}
inline void DpuModel::clear_refine_det_param() {
  if (GetArenaNoVirtual() == NULL && refine_det_param_ != NULL) delete refine_det_param_;
  refine_det_param_ = NULL;
}
inline const ::xilinx::config::RefineDetParam& DpuModel::refine_det_param() const {
  const ::xilinx::config::RefineDetParam* p = refine_det_param_;
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.refine_det_param)
  return p != NULL ? *p : *reinterpret_cast<const ::xilinx::config::RefineDetParam*>(
      &::xilinx::config::_RefineDetParam_default_instance_);
}
inline ::xilinx::config::RefineDetParam* DpuModel::mutable_refine_det_param() {
  
  if (refine_det_param_ == NULL) {
    refine_det_param_ = new ::xilinx::config::RefineDetParam;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.refine_det_param)
  return refine_det_param_;
}
inline ::xilinx::config::RefineDetParam* DpuModel::release_refine_det_param() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModel.refine_det_param)
  
  ::xilinx::config::RefineDetParam* temp = refine_det_param_;
  refine_det_param_ = NULL;
  return temp;
}
inline void DpuModel::set_allocated_refine_det_param(::xilinx::config::RefineDetParam* refine_det_param) {
  delete refine_det_param_;
  refine_det_param_ = refine_det_param;
  if (refine_det_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModel.refine_det_param)
}

// .xilinx.config.YoloV3Param yolo_v3_param = 5;
inline bool DpuModel::has_yolo_v3_param() const {
  return this != internal_default_instance() && yolo_v3_param_ != NULL;
}
inline void DpuModel::clear_yolo_v3_param() {
  if (GetArenaNoVirtual() == NULL && yolo_v3_param_ != NULL) delete yolo_v3_param_;
  yolo_v3_param_ = NULL;
}
inline const ::xilinx::config::YoloV3Param& DpuModel::yolo_v3_param() const {
  const ::xilinx::config::YoloV3Param* p = yolo_v3_param_;
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.yolo_v3_param)
  return p != NULL ? *p : *reinterpret_cast<const ::xilinx::config::YoloV3Param*>(
      &::xilinx::config::_YoloV3Param_default_instance_);
}
inline ::xilinx::config::YoloV3Param* DpuModel::mutable_yolo_v3_param() {
  
  if (yolo_v3_param_ == NULL) {
    yolo_v3_param_ = new ::xilinx::config::YoloV3Param;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.yolo_v3_param)
  return yolo_v3_param_;
}
inline ::xilinx::config::YoloV3Param* DpuModel::release_yolo_v3_param() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModel.yolo_v3_param)
  
  ::xilinx::config::YoloV3Param* temp = yolo_v3_param_;
  yolo_v3_param_ = NULL;
  return temp;
}
inline void DpuModel::set_allocated_yolo_v3_param(::xilinx::config::YoloV3Param* yolo_v3_param) {
  delete yolo_v3_param_;
  yolo_v3_param_ = yolo_v3_param;
  if (yolo_v3_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModel.yolo_v3_param)
}

// .xilinx.config.SSDParam ssd_param = 6;
inline bool DpuModel::has_ssd_param() const {
  return this != internal_default_instance() && ssd_param_ != NULL;
}
inline void DpuModel::clear_ssd_param() {
  if (GetArenaNoVirtual() == NULL && ssd_param_ != NULL) delete ssd_param_;
  ssd_param_ = NULL;
}
inline const ::xilinx::config::SSDParam& DpuModel::ssd_param() const {
  const ::xilinx::config::SSDParam* p = ssd_param_;
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.ssd_param)
  return p != NULL ? *p : *reinterpret_cast<const ::xilinx::config::SSDParam*>(
      &::xilinx::config::_SSDParam_default_instance_);
}
inline ::xilinx::config::SSDParam* DpuModel::mutable_ssd_param() {
  
  if (ssd_param_ == NULL) {
    ssd_param_ = new ::xilinx::config::SSDParam;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.ssd_param)
  return ssd_param_;
}
inline ::xilinx::config::SSDParam* DpuModel::release_ssd_param() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModel.ssd_param)
  
  ::xilinx::config::SSDParam* temp = ssd_param_;
  ssd_param_ = NULL;
  return temp;
}
inline void DpuModel::set_allocated_ssd_param(::xilinx::config::SSDParam* ssd_param) {
  delete ssd_param_;
  ssd_param_ = ssd_param;
  if (ssd_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModel.ssd_param)
}

// .xilinx.config.ClassificationParam classification_param = 7;
inline bool DpuModel::has_classification_param() const {
  return this != internal_default_instance() && classification_param_ != NULL;
}
inline void DpuModel::clear_classification_param() {
  if (GetArenaNoVirtual() == NULL && classification_param_ != NULL) delete classification_param_;
  classification_param_ = NULL;
}
inline const ::xilinx::config::ClassificationParam& DpuModel::classification_param() const {
  const ::xilinx::config::ClassificationParam* p = classification_param_;
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.classification_param)
  return p != NULL ? *p : *reinterpret_cast<const ::xilinx::config::ClassificationParam*>(
      &::xilinx::config::_ClassificationParam_default_instance_);
}
inline ::xilinx::config::ClassificationParam* DpuModel::mutable_classification_param() {
  
  if (classification_param_ == NULL) {
    classification_param_ = new ::xilinx::config::ClassificationParam;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.classification_param)
  return classification_param_;
}
inline ::xilinx::config::ClassificationParam* DpuModel::release_classification_param() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModel.classification_param)
  
  ::xilinx::config::ClassificationParam* temp = classification_param_;
  classification_param_ = NULL;
  return temp;
}
inline void DpuModel::set_allocated_classification_param(::xilinx::config::ClassificationParam* classification_param) {
  delete classification_param_;
  classification_param_ = classification_param;
  if (classification_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModel.classification_param)
}

// .xilinx.config.DenseBoxParam dense_box_param = 8;
inline bool DpuModel::has_dense_box_param() const {
  return this != internal_default_instance() && dense_box_param_ != NULL;
}
inline void DpuModel::clear_dense_box_param() {
  if (GetArenaNoVirtual() == NULL && dense_box_param_ != NULL) delete dense_box_param_;
  dense_box_param_ = NULL;
}
inline const ::xilinx::config::DenseBoxParam& DpuModel::dense_box_param() const {
  const ::xilinx::config::DenseBoxParam* p = dense_box_param_;
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.dense_box_param)
  return p != NULL ? *p : *reinterpret_cast<const ::xilinx::config::DenseBoxParam*>(
      &::xilinx::config::_DenseBoxParam_default_instance_);
}
inline ::xilinx::config::DenseBoxParam* DpuModel::mutable_dense_box_param() {
  
  if (dense_box_param_ == NULL) {
    dense_box_param_ = new ::xilinx::config::DenseBoxParam;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.dense_box_param)
  return dense_box_param_;
}
inline ::xilinx::config::DenseBoxParam* DpuModel::release_dense_box_param() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModel.dense_box_param)
  
  ::xilinx::config::DenseBoxParam* temp = dense_box_param_;
  dense_box_param_ = NULL;
  return temp;
}
inline void DpuModel::set_allocated_dense_box_param(::xilinx::config::DenseBoxParam* dense_box_param) {
  delete dense_box_param_;
  dense_box_param_ = dense_box_param;
  if (dense_box_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModel.dense_box_param)
}

// .xilinx.config.MultiTaskParam multi_task_param = 9;
inline bool DpuModel::has_multi_task_param() const {
  return this != internal_default_instance() && multi_task_param_ != NULL;
}
inline void DpuModel::clear_multi_task_param() {
  if (GetArenaNoVirtual() == NULL && multi_task_param_ != NULL) delete multi_task_param_;
  multi_task_param_ = NULL;
}
inline const ::xilinx::config::MultiTaskParam& DpuModel::multi_task_param() const {
  const ::xilinx::config::MultiTaskParam* p = multi_task_param_;
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModel.multi_task_param)
  return p != NULL ? *p : *reinterpret_cast<const ::xilinx::config::MultiTaskParam*>(
      &::xilinx::config::_MultiTaskParam_default_instance_);
}
inline ::xilinx::config::MultiTaskParam* DpuModel::mutable_multi_task_param() {
  
  if (multi_task_param_ == NULL) {
    multi_task_param_ = new ::xilinx::config::MultiTaskParam;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModel.multi_task_param)
  return multi_task_param_;
}
inline ::xilinx::config::MultiTaskParam* DpuModel::release_multi_task_param() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModel.multi_task_param)
  
  ::xilinx::config::MultiTaskParam* temp = multi_task_param_;
  multi_task_param_ = NULL;
  return temp;
}
inline void DpuModel::set_allocated_multi_task_param(::xilinx::config::MultiTaskParam* multi_task_param) {
  delete multi_task_param_;
  multi_task_param_ = multi_task_param;
  if (multi_task_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModel.multi_task_param)
}

// -------------------------------------------------------------------

// DpuModelList

// repeated .xilinx.config.DpuModel model = 1;
inline int DpuModelList::model_size() const {
  return model_.size();
}
inline void DpuModelList::clear_model() {
  model_.Clear();
}
inline const ::xilinx::config::DpuModel& DpuModelList::model(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModelList.model)
  return model_.Get(index);
}
inline ::xilinx::config::DpuModel* DpuModelList::mutable_model(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModelList.model)
  return model_.Mutable(index);
}
inline ::xilinx::config::DpuModel* DpuModelList::add_model() {
  // @@protoc_insertion_point(field_add:xilinx.config.DpuModelList.model)
  return model_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuModel >*
DpuModelList::mutable_model() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.DpuModelList.model)
  return &model_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::DpuModel >&
DpuModelList::model() const {
  // @@protoc_insertion_point(field_list:xilinx.config.DpuModelList.model)
  return model_;
}

// -------------------------------------------------------------------

// FaceFixFeature

// repeated int32 feature = 1;
inline int FaceFixFeature::feature_size() const {
  return feature_.size();
}
inline void FaceFixFeature::clear_feature() {
  feature_.Clear();
}
inline ::google::protobuf::int32 FaceFixFeature::feature(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.FaceFixFeature.feature)
  return feature_.Get(index);
}
inline void FaceFixFeature::set_feature(int index, ::google::protobuf::int32 value) {
  feature_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.FaceFixFeature.feature)
}
inline void FaceFixFeature::add_feature(::google::protobuf::int32 value) {
  feature_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.FaceFixFeature.feature)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FaceFixFeature::feature() const {
  // @@protoc_insertion_point(field_list:xilinx.config.FaceFixFeature.feature)
  return feature_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FaceFixFeature::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.FaceFixFeature.feature)
  return &feature_;
}

// -------------------------------------------------------------------

// FaceFloatFeature

// repeated float feature = 1;
inline int FaceFloatFeature::feature_size() const {
  return feature_.size();
}
inline void FaceFloatFeature::clear_feature() {
  feature_.Clear();
}
inline float FaceFloatFeature::feature(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.FaceFloatFeature.feature)
  return feature_.Get(index);
}
inline void FaceFloatFeature::set_feature(int index, float value) {
  feature_.Set(index, value);
  // @@protoc_insertion_point(field_set:xilinx.config.FaceFloatFeature.feature)
}
inline void FaceFloatFeature::add_feature(float value) {
  feature_.Add(value);
  // @@protoc_insertion_point(field_add:xilinx.config.FaceFloatFeature.feature)
}
inline const ::google::protobuf::RepeatedField< float >&
FaceFloatFeature::feature() const {
  // @@protoc_insertion_point(field_list:xilinx.config.FaceFloatFeature.feature)
  return feature_;
}
inline ::google::protobuf::RepeatedField< float >*
FaceFloatFeature::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.FaceFloatFeature.feature)
  return &feature_;
}

// -------------------------------------------------------------------

// Attribute

// string label = 1;
inline void Attribute::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Attribute::label() const {
  // @@protoc_insertion_point(field_get:xilinx.config.Attribute.label)
  return label_.GetNoArena();
}
inline void Attribute::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xilinx.config.Attribute.label)
}
#if LANG_CXX11
inline void Attribute::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xilinx.config.Attribute.label)
}
#endif
inline void Attribute::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xilinx.config.Attribute.label)
}
inline void Attribute::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xilinx.config.Attribute.label)
}
inline ::std::string* Attribute::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:xilinx.config.Attribute.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Attribute::release_label() {
  // @@protoc_insertion_point(field_release:xilinx.config.Attribute.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Attribute::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.Attribute.label)
}

// uint32 value = 2;
inline void Attribute::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 Attribute::value() const {
  // @@protoc_insertion_point(field_get:xilinx.config.Attribute.value)
  return value_;
}
inline void Attribute::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.Attribute.value)
}

// float score = 3;
inline void Attribute::clear_score() {
  score_ = 0;
}
inline float Attribute::score() const {
  // @@protoc_insertion_point(field_get:xilinx.config.Attribute.score)
  return score_;
}
inline void Attribute::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.Attribute.score)
}

// -------------------------------------------------------------------

// Point

// float x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline float Point::x() const {
  // @@protoc_insertion_point(field_get:xilinx.config.Point.x)
  return x_;
}
inline void Point::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.Point.x)
}

// float y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline float Point::y() const {
  // @@protoc_insertion_point(field_get:xilinx.config.Point.y)
  return y_;
}
inline void Point::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.Point.y)
}

// -------------------------------------------------------------------

// BoundingBox

// uint32 label = 1;
inline void BoundingBox::clear_label() {
  label_ = 0u;
}
inline ::google::protobuf::uint32 BoundingBox::label() const {
  // @@protoc_insertion_point(field_get:xilinx.config.BoundingBox.label)
  return label_;
}
inline void BoundingBox::set_label(::google::protobuf::uint32 value) {
  
  label_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.BoundingBox.label)
}

// float score = 2;
inline void BoundingBox::clear_score() {
  score_ = 0;
}
inline float BoundingBox::score() const {
  // @@protoc_insertion_point(field_get:xilinx.config.BoundingBox.score)
  return score_;
}
inline void BoundingBox::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.BoundingBox.score)
}

// float x = 3;
inline void BoundingBox::clear_x() {
  x_ = 0;
}
inline float BoundingBox::x() const {
  // @@protoc_insertion_point(field_get:xilinx.config.BoundingBox.x)
  return x_;
}
inline void BoundingBox::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.BoundingBox.x)
}

// float y = 4;
inline void BoundingBox::clear_y() {
  y_ = 0;
}
inline float BoundingBox::y() const {
  // @@protoc_insertion_point(field_get:xilinx.config.BoundingBox.y)
  return y_;
}
inline void BoundingBox::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.BoundingBox.y)
}

// float width = 5;
inline void BoundingBox::clear_width() {
  width_ = 0;
}
inline float BoundingBox::width() const {
  // @@protoc_insertion_point(field_get:xilinx.config.BoundingBox.width)
  return width_;
}
inline void BoundingBox::set_width(float value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.BoundingBox.width)
}

// float height = 6;
inline void BoundingBox::clear_height() {
  height_ = 0;
}
inline float BoundingBox::height() const {
  // @@protoc_insertion_point(field_get:xilinx.config.BoundingBox.height)
  return height_;
}
inline void BoundingBox::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.BoundingBox.height)
}

// -------------------------------------------------------------------

// AttributeResult

// repeated .xilinx.config.Attribute attribute = 1;
inline int AttributeResult::attribute_size() const {
  return attribute_.size();
}
inline void AttributeResult::clear_attribute() {
  attribute_.Clear();
}
inline const ::xilinx::config::Attribute& AttributeResult::attribute(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.AttributeResult.attribute)
  return attribute_.Get(index);
}
inline ::xilinx::config::Attribute* AttributeResult::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.AttributeResult.attribute)
  return attribute_.Mutable(index);
}
inline ::xilinx::config::Attribute* AttributeResult::add_attribute() {
  // @@protoc_insertion_point(field_add:xilinx.config.AttributeResult.attribute)
  return attribute_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::Attribute >*
AttributeResult::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.AttributeResult.attribute)
  return &attribute_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::Attribute >&
AttributeResult::attribute() const {
  // @@protoc_insertion_point(field_list:xilinx.config.AttributeResult.attribute)
  return attribute_;
}

// -------------------------------------------------------------------

// LandmarkResult

// float score = 1;
inline void LandmarkResult::clear_score() {
  score_ = 0;
}
inline float LandmarkResult::score() const {
  // @@protoc_insertion_point(field_get:xilinx.config.LandmarkResult.score)
  return score_;
}
inline void LandmarkResult::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.LandmarkResult.score)
}

// repeated .xilinx.config.Point point = 2;
inline int LandmarkResult::point_size() const {
  return point_.size();
}
inline void LandmarkResult::clear_point() {
  point_.Clear();
}
inline const ::xilinx::config::Point& LandmarkResult::point(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.LandmarkResult.point)
  return point_.Get(index);
}
inline ::xilinx::config::Point* LandmarkResult::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.LandmarkResult.point)
  return point_.Mutable(index);
}
inline ::xilinx::config::Point* LandmarkResult::add_point() {
  // @@protoc_insertion_point(field_add:xilinx.config.LandmarkResult.point)
  return point_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::Point >*
LandmarkResult::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.LandmarkResult.point)
  return &point_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::Point >&
LandmarkResult::point() const {
  // @@protoc_insertion_point(field_list:xilinx.config.LandmarkResult.point)
  return point_;
}

// uint32 gender = 3;
inline void LandmarkResult::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 LandmarkResult::gender() const {
  // @@protoc_insertion_point(field_get:xilinx.config.LandmarkResult.gender)
  return gender_;
}
inline void LandmarkResult::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.LandmarkResult.gender)
}

// uint32 age = 4;
inline void LandmarkResult::clear_age() {
  age_ = 0u;
}
inline ::google::protobuf::uint32 LandmarkResult::age() const {
  // @@protoc_insertion_point(field_get:xilinx.config.LandmarkResult.age)
  return age_;
}
inline void LandmarkResult::set_age(::google::protobuf::uint32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.LandmarkResult.age)
}

// -------------------------------------------------------------------

// DetectResult

// repeated .xilinx.config.BoundingBox bounding_box = 1;
inline int DetectResult::bounding_box_size() const {
  return bounding_box_.size();
}
inline void DetectResult::clear_bounding_box() {
  bounding_box_.Clear();
}
inline const ::xilinx::config::BoundingBox& DetectResult::bounding_box(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.DetectResult.bounding_box)
  return bounding_box_.Get(index);
}
inline ::xilinx::config::BoundingBox* DetectResult::mutable_bounding_box(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.DetectResult.bounding_box)
  return bounding_box_.Mutable(index);
}
inline ::xilinx::config::BoundingBox* DetectResult::add_bounding_box() {
  // @@protoc_insertion_point(field_add:xilinx.config.DetectResult.bounding_box)
  return bounding_box_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >*
DetectResult::mutable_bounding_box() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.DetectResult.bounding_box)
  return &bounding_box_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >&
DetectResult::bounding_box() const {
  // @@protoc_insertion_point(field_list:xilinx.config.DetectResult.bounding_box)
  return bounding_box_;
}

// -------------------------------------------------------------------

// RefineDetResult

// repeated .xilinx.config.BoundingBox bounding_box = 1;
inline int RefineDetResult::bounding_box_size() const {
  return bounding_box_.size();
}
inline void RefineDetResult::clear_bounding_box() {
  bounding_box_.Clear();
}
inline const ::xilinx::config::BoundingBox& RefineDetResult::bounding_box(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.RefineDetResult.bounding_box)
  return bounding_box_.Get(index);
}
inline ::xilinx::config::BoundingBox* RefineDetResult::mutable_bounding_box(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.RefineDetResult.bounding_box)
  return bounding_box_.Mutable(index);
}
inline ::xilinx::config::BoundingBox* RefineDetResult::add_bounding_box() {
  // @@protoc_insertion_point(field_add:xilinx.config.RefineDetResult.bounding_box)
  return bounding_box_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >*
RefineDetResult::mutable_bounding_box() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.RefineDetResult.bounding_box)
  return &bounding_box_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::BoundingBox >&
RefineDetResult::bounding_box() const {
  // @@protoc_insertion_point(field_list:xilinx.config.RefineDetResult.bounding_box)
  return bounding_box_;
}

// -------------------------------------------------------------------

// Score

// int32 index = 1;
inline void Score::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 Score::index() const {
  // @@protoc_insertion_point(field_get:xilinx.config.Score.index)
  return index_;
}
inline void Score::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.Score.index)
}

// float score = 2;
inline void Score::clear_score() {
  score_ = 0;
}
inline float Score::score() const {
  // @@protoc_insertion_point(field_get:xilinx.config.Score.score)
  return score_;
}
inline void Score::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:xilinx.config.Score.score)
}

// -------------------------------------------------------------------

// ClassificationResult

// repeated .xilinx.config.Score score = 1;
inline int ClassificationResult::score_size() const {
  return score_.size();
}
inline void ClassificationResult::clear_score() {
  score_.Clear();
}
inline const ::xilinx::config::Score& ClassificationResult::score(int index) const {
  // @@protoc_insertion_point(field_get:xilinx.config.ClassificationResult.score)
  return score_.Get(index);
}
inline ::xilinx::config::Score* ClassificationResult::mutable_score(int index) {
  // @@protoc_insertion_point(field_mutable:xilinx.config.ClassificationResult.score)
  return score_.Mutable(index);
}
inline ::xilinx::config::Score* ClassificationResult::add_score() {
  // @@protoc_insertion_point(field_add:xilinx.config.ClassificationResult.score)
  return score_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xilinx::config::Score >*
ClassificationResult::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:xilinx.config.ClassificationResult.score)
  return &score_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xilinx::config::Score >&
ClassificationResult::score() const {
  // @@protoc_insertion_point(field_list:xilinx.config.ClassificationResult.score)
  return score_;
}

// -------------------------------------------------------------------

// DpuModelResult

// .xilinx.config.LandmarkResult landmark_result = 1;
inline bool DpuModelResult::has_landmark_result() const {
  return dpu_model_result_case() == kLandmarkResult;
}
inline void DpuModelResult::set_has_landmark_result() {
  _oneof_case_[0] = kLandmarkResult;
}
inline void DpuModelResult::clear_landmark_result() {
  if (has_landmark_result()) {
    delete dpu_model_result_.landmark_result_;
    clear_has_dpu_model_result();
  }
}
inline  const ::xilinx::config::LandmarkResult& DpuModelResult::landmark_result() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModelResult.landmark_result)
  return has_landmark_result()
      ? *dpu_model_result_.landmark_result_
      : ::xilinx::config::LandmarkResult::default_instance();
}
inline ::xilinx::config::LandmarkResult* DpuModelResult::mutable_landmark_result() {
  if (!has_landmark_result()) {
    clear_dpu_model_result();
    set_has_landmark_result();
    dpu_model_result_.landmark_result_ = new ::xilinx::config::LandmarkResult;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModelResult.landmark_result)
  return dpu_model_result_.landmark_result_;
}
inline ::xilinx::config::LandmarkResult* DpuModelResult::release_landmark_result() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModelResult.landmark_result)
  if (has_landmark_result()) {
    clear_has_dpu_model_result();
    ::xilinx::config::LandmarkResult* temp = dpu_model_result_.landmark_result_;
    dpu_model_result_.landmark_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DpuModelResult::set_allocated_landmark_result(::xilinx::config::LandmarkResult* landmark_result) {
  clear_dpu_model_result();
  if (landmark_result) {
    set_has_landmark_result();
    dpu_model_result_.landmark_result_ = landmark_result;
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModelResult.landmark_result)
}

// .xilinx.config.DetectResult detect_result = 2;
inline bool DpuModelResult::has_detect_result() const {
  return dpu_model_result_case() == kDetectResult;
}
inline void DpuModelResult::set_has_detect_result() {
  _oneof_case_[0] = kDetectResult;
}
inline void DpuModelResult::clear_detect_result() {
  if (has_detect_result()) {
    delete dpu_model_result_.detect_result_;
    clear_has_dpu_model_result();
  }
}
inline  const ::xilinx::config::DetectResult& DpuModelResult::detect_result() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModelResult.detect_result)
  return has_detect_result()
      ? *dpu_model_result_.detect_result_
      : ::xilinx::config::DetectResult::default_instance();
}
inline ::xilinx::config::DetectResult* DpuModelResult::mutable_detect_result() {
  if (!has_detect_result()) {
    clear_dpu_model_result();
    set_has_detect_result();
    dpu_model_result_.detect_result_ = new ::xilinx::config::DetectResult;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModelResult.detect_result)
  return dpu_model_result_.detect_result_;
}
inline ::xilinx::config::DetectResult* DpuModelResult::release_detect_result() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModelResult.detect_result)
  if (has_detect_result()) {
    clear_has_dpu_model_result();
    ::xilinx::config::DetectResult* temp = dpu_model_result_.detect_result_;
    dpu_model_result_.detect_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DpuModelResult::set_allocated_detect_result(::xilinx::config::DetectResult* detect_result) {
  clear_dpu_model_result();
  if (detect_result) {
    set_has_detect_result();
    dpu_model_result_.detect_result_ = detect_result;
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModelResult.detect_result)
}

// .xilinx.config.AttributeResult attribute_result = 3;
inline bool DpuModelResult::has_attribute_result() const {
  return dpu_model_result_case() == kAttributeResult;
}
inline void DpuModelResult::set_has_attribute_result() {
  _oneof_case_[0] = kAttributeResult;
}
inline void DpuModelResult::clear_attribute_result() {
  if (has_attribute_result()) {
    delete dpu_model_result_.attribute_result_;
    clear_has_dpu_model_result();
  }
}
inline  const ::xilinx::config::AttributeResult& DpuModelResult::attribute_result() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModelResult.attribute_result)
  return has_attribute_result()
      ? *dpu_model_result_.attribute_result_
      : ::xilinx::config::AttributeResult::default_instance();
}
inline ::xilinx::config::AttributeResult* DpuModelResult::mutable_attribute_result() {
  if (!has_attribute_result()) {
    clear_dpu_model_result();
    set_has_attribute_result();
    dpu_model_result_.attribute_result_ = new ::xilinx::config::AttributeResult;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModelResult.attribute_result)
  return dpu_model_result_.attribute_result_;
}
inline ::xilinx::config::AttributeResult* DpuModelResult::release_attribute_result() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModelResult.attribute_result)
  if (has_attribute_result()) {
    clear_has_dpu_model_result();
    ::xilinx::config::AttributeResult* temp = dpu_model_result_.attribute_result_;
    dpu_model_result_.attribute_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DpuModelResult::set_allocated_attribute_result(::xilinx::config::AttributeResult* attribute_result) {
  clear_dpu_model_result();
  if (attribute_result) {
    set_has_attribute_result();
    dpu_model_result_.attribute_result_ = attribute_result;
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModelResult.attribute_result)
}

// .xilinx.config.RefineDetResult refine_det_result = 4;
inline bool DpuModelResult::has_refine_det_result() const {
  return dpu_model_result_case() == kRefineDetResult;
}
inline void DpuModelResult::set_has_refine_det_result() {
  _oneof_case_[0] = kRefineDetResult;
}
inline void DpuModelResult::clear_refine_det_result() {
  if (has_refine_det_result()) {
    delete dpu_model_result_.refine_det_result_;
    clear_has_dpu_model_result();
  }
}
inline  const ::xilinx::config::RefineDetResult& DpuModelResult::refine_det_result() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModelResult.refine_det_result)
  return has_refine_det_result()
      ? *dpu_model_result_.refine_det_result_
      : ::xilinx::config::RefineDetResult::default_instance();
}
inline ::xilinx::config::RefineDetResult* DpuModelResult::mutable_refine_det_result() {
  if (!has_refine_det_result()) {
    clear_dpu_model_result();
    set_has_refine_det_result();
    dpu_model_result_.refine_det_result_ = new ::xilinx::config::RefineDetResult;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModelResult.refine_det_result)
  return dpu_model_result_.refine_det_result_;
}
inline ::xilinx::config::RefineDetResult* DpuModelResult::release_refine_det_result() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModelResult.refine_det_result)
  if (has_refine_det_result()) {
    clear_has_dpu_model_result();
    ::xilinx::config::RefineDetResult* temp = dpu_model_result_.refine_det_result_;
    dpu_model_result_.refine_det_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DpuModelResult::set_allocated_refine_det_result(::xilinx::config::RefineDetResult* refine_det_result) {
  clear_dpu_model_result();
  if (refine_det_result) {
    set_has_refine_det_result();
    dpu_model_result_.refine_det_result_ = refine_det_result;
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModelResult.refine_det_result)
}

// .xilinx.config.ClassificationResult classification_result = 5;
inline bool DpuModelResult::has_classification_result() const {
  return dpu_model_result_case() == kClassificationResult;
}
inline void DpuModelResult::set_has_classification_result() {
  _oneof_case_[0] = kClassificationResult;
}
inline void DpuModelResult::clear_classification_result() {
  if (has_classification_result()) {
    delete dpu_model_result_.classification_result_;
    clear_has_dpu_model_result();
  }
}
inline  const ::xilinx::config::ClassificationResult& DpuModelResult::classification_result() const {
  // @@protoc_insertion_point(field_get:xilinx.config.DpuModelResult.classification_result)
  return has_classification_result()
      ? *dpu_model_result_.classification_result_
      : ::xilinx::config::ClassificationResult::default_instance();
}
inline ::xilinx::config::ClassificationResult* DpuModelResult::mutable_classification_result() {
  if (!has_classification_result()) {
    clear_dpu_model_result();
    set_has_classification_result();
    dpu_model_result_.classification_result_ = new ::xilinx::config::ClassificationResult;
  }
  // @@protoc_insertion_point(field_mutable:xilinx.config.DpuModelResult.classification_result)
  return dpu_model_result_.classification_result_;
}
inline ::xilinx::config::ClassificationResult* DpuModelResult::release_classification_result() {
  // @@protoc_insertion_point(field_release:xilinx.config.DpuModelResult.classification_result)
  if (has_classification_result()) {
    clear_has_dpu_model_result();
    ::xilinx::config::ClassificationResult* temp = dpu_model_result_.classification_result_;
    dpu_model_result_.classification_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void DpuModelResult::set_allocated_classification_result(::xilinx::config::ClassificationResult* classification_result) {
  clear_dpu_model_result();
  if (classification_result) {
    set_has_classification_result();
    dpu_model_result_.classification_result_ = classification_result;
  }
  // @@protoc_insertion_point(field_set_allocated:xilinx.config.DpuModelResult.classification_result)
}

inline bool DpuModelResult::has_dpu_model_result() const {
  return dpu_model_result_case() != DPU_MODEL_RESULT_NOT_SET;
}
inline void DpuModelResult::clear_has_dpu_model_result() {
  _oneof_case_[0] = DPU_MODEL_RESULT_NOT_SET;
}
inline DpuModelResult::DpuModelResultCase DpuModelResult::dpu_model_result_case() const {
  return DpuModelResult::DpuModelResultCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace config
}  // namespace xilinx

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xilinx::config::DpuModel_ModelType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xilinx::config::DpuModel_ModelType>() {
  return ::xilinx::config::DpuModel_ModelType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_xilinx_2fconfig_2fXILINX_5fAI_5fSDK_2eproto__INCLUDED
